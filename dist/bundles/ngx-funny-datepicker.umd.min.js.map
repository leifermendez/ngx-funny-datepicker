{"version":3,"sources":["../../src/lib/ngx-funny-datepicker.service.ts","../../src/lib/ngx-funny-datepicker.component.ts","../../src/lib/datepicker/datepicker.component.ts","../../src/lib/out-side.directive.ts","../../src/lib/check-input.directive.ts","../../src/lib/ngx-funny-datepicker.module.ts"],"names":["Injectable","args","providedIn","NgxFunnyDatepickerComponent","_this","this","valueDate","EventEmitter","startDate","moment","locale","rangeLabel","timeLabel","clearLabel","emitValue","data","emit","prototype","ngOnInit","Component","selector","template","Output","Input","moment_","DatepickerComponent","renderer","value","formatInputDate","formatInputTime","emitSelected","weekDaysHeaderArr","dataMonths","canAccessPrevious","canAccessNext","todayDate","set","hour","minute","second","millisecond","renderedFlag","mode","isInvalid","minInputHour","maxInputHour","valueInputHour","start","end","minInputMinute","maxInputMinute","valueInputMinute","onChange","_","onTouch","onTouched","addOrSubHour","num","checkHourValidate","Number","addOrSubMinute","checkMinuteValidate","$event","toHour","meridianTime","format","endDate","reFormatInput","changeMeridianTime","newMeridian","isStartOrEnd","hours","concatValueInput","concatValue","join","selected","toDate","generateAllGrid","dateObjectCurrent","startOf","clone","forEach","a","makeGridCustom","year","month","dateOfTurn","hasOwnProperty","firstDayDate","lastDayDate","endOf","weekday","initEmptyCell","lastEmptyCell","daysInMonth","arrayLengths","getDimensions","i","obj","available","isToday","isAvailable","date","isActive","dateFromDayAndMonthAndYear","isSame","startDay","endDay","inRange","push","setOptions","makeHeader","navDate","isValid","startDay_1","day","d","includeEndDate","endDay_1","applyRange","startDay_2","currentMonth","currentYear","maxDate","add","minDate","subtract","showInitialValue","onInput","writeValue","registerOnChange","fn","registerOnTouched","setDisabledState","isDisabled","setAccess","canChangeNavMonth","changeNavMonth","clonedDate","canChangeNavMonthLogic","initialEmptyCells","lastEmptyCells","arrayLength","dateToCheck","dateFromNum","isAvailableLogic","referenceDate","selectDay","selectedDate","currDate","isSameOrBefore","isSameOrAfter","generateDate","resetActivity","generatedDate","resetRange","Object","keys","isNaN","map","timeObject","includeTime","startMonthLength","endMonthLength","calendar","days","isBefore","isAfter","currentDate","isBetween","toggleCalendar","isOpen","openCalendar","closeCalendar","changeMode","clear","startTime","endTime","setTime","handleModeChange","setStartTime","time","setEndTime","handleTimeChange","replace","lastTwo","substr","length","toUpperCase","last","hasLastTwo","includes","isAm","startTimePicker","nativeElement","blur","endTimePicker","providers","provide","NG_VALUE_ACCESSOR","useExisting","forwardRef","multi","Renderer2","ViewChild","OutSideDirective","elementRef","clickOutside","onClick","target","classElement","classList","Array","from","contains","Directive","ElementRef","HostListener","CheckInputDirective","el","inputElement","onKeyPress","event","tmpValue","integerOnly","onKeyUp","checkLength","preventDefault","toString","e","key","indexOf","keyCode","ctrlKey","NgModule","declarations","imports","CommonModule","FormsModule","exports"],"mappings":"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","sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NgxFunnyDatepickerService {\n\n  constructor() { }\n}\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport * as moment from 'moment';\n\n@Component({\n  selector: 'ngx-funny-datepicker-dummy',\n  template: `\n    Please use ngx-funny-datepicker\n  `,\n  styles: []\n})\nexport class NgxFunnyDatepickerComponent implements OnInit {\n  @Output() valueDate = new EventEmitter<any>();\n  @Input() isRange: boolean;\n  @Input() hasTime: boolean;\n  @Input() startDate: any = moment();\n  @Input() endDate: any;\n  @Input() minDate: any;\n  @Input() maxDate: any;\n  @Input() locale = 'en';\n  @Input() rangeLabel = 'Range';\n  @Input() timeLabel = 'Time';\n  @Input() clearLabel = 'Clear';\n  @Input() classInput: string;\n\n  constructor() {\n  }\n\n  ngOnInit() {\n  }\n\n  emitValue = (data) => this.valueDate.emit(data);\n\n}\n","import { Renderer2 } from '@angular/core';\nimport { Component, OnInit, Input, Output, EventEmitter, ViewChild, ElementRef, forwardRef } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport * as moment_ from 'moment';\n\nconst moment = moment_;\n\n@Component({\n  selector: 'ngx-funny-datepicker',\n  templateUrl: './datepicker.component.html',\n  styleUrls: ['./datepicker.component.css'],\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => DatepickerComponent),\n      multi: true\n    }\n  ]\n})\nexport class DatepickerComponent implements OnInit, ControlValueAccessor {\n  @Input() value: any = '';\n  @ViewChild('startTimePicker') startTimePicker: ElementRef;\n  @ViewChild('endTimePicker') endTimePicker: ElementRef;\n  @Input() showInitialValue: boolean;\n  @Input() isRange: boolean;\n  @Input() hasTime: boolean;\n  @Input() startDate: any;\n  @Input() endDate: any;\n  @Input() minDate: any;\n  @Input() maxDate: any;\n  @Input() classInput: string;\n  @Input() locale = 'en';\n  @Input() rangeLabel = 'Range';\n  @Input() timeLabel = 'Time';\n  @Input() clearLabel = 'Clear';\n  @Input() includeEndDate: boolean;\n  @Input() meridianTime: boolean;\n  @Input() formatInputDate = 'D MMM, YYYY';\n  @Input() formatInputTime = 'D MMM, YYYY HH:mm';\n  @Output() emitSelected = new EventEmitter<any>();\n  isOpen: boolean;\n  navDate: any;\n  weekDaysHeaderArr: Array<string> = [];\n  dataMonths: any = {};\n  selectedDate: any;\n  canAccessPrevious = true;\n  canAccessNext = true;\n  todayDate = moment().set({ hour: 0, minute: 0, second: 0, millisecond: 0 });\n  startDay: any;\n  endDay: any;\n  renderedFlag = true;\n  mode = 'end';\n  initialEmptyCells: number;\n  lastEmptyCells: number;\n  arrayLength: number;\n  currentMonth: number;\n  currentYear: number;\n  selected: any;\n  startTime: any;\n  endTime: any;\n  isInvalid = false;\n  includeTime: boolean;\n  minInputHour = 0;\n  maxInputHour = 23;\n  valueInputHour: any = {\n    start: {},\n    end: {}\n  };\n  minInputMinute = 0;\n  maxInputMinute = 59;\n  valueInputMinute: any = {\n    start: {},\n    end: {}\n  };\n  /**\n   * ControlAccessor\n   */\n  onTouched: boolean;\n  isDisabled: boolean;\n  onChange = (_: any) => {\n  };\n  onTouch = () => {\n    this.onTouched = true;\n  };\n\n  constructor(private renderer: Renderer2) {\n\n\n  }\n\n  ngOnInit() {\n    this.setOptions();\n    this.makeHeader();\n    /**\n     * Set startDate and parse\n     */\n\n    this.navDate = moment();\n    this.valueInputHour.start = this.navDate.format('hh');\n    this.valueInputMinute.start = this.navDate.format('mm');\n\n    this.valueInputMinute.end = this.navDate.format('mm');\n    this.valueInputHour.end = this.navDate.format('hh');\n\n    if (this.startDate && moment(this.startDate).isValid()) {\n      this.startDate = moment(this.startDate);\n      this.navDate = this.startDate;\n      this.valueInputHour.start = this.startDate.format('hh');\n      this.valueInputMinute.start = this.startDate.format('mm');\n      const startDay = {\n        month: Number(this.startDate.format('M')),\n        year: this.startDate.year(),\n        day: Number(this.startDate.format('DD'))\n      };\n      this.dataMonths[startDay.year][startDay.month].forEach(d => d.isActive = (d.value === startDay.day));\n    } else {\n      this.startDate = moment();\n    }\n\n    /**\n     * Set endDate and parse\n     */\n\n    if (this.endDate && moment(this.endDate).isValid()) {\n      this.endDate = moment(this.endDate);\n      this.navDate = this.endDate;\n      this.valueInputMinute.end = this.endDate.format('mm');\n      this.valueInputHour.end = this.endDate.format('hh');\n      this.includeEndDate = true;\n      const endDay = {\n        month: Number(this.endDate.format('M')),\n        year: this.endDate.year(),\n        day: Number(this.endDate.format('DD'))\n      };\n\n      this.applyRange();\n      const startDay = {\n        month: Number(this.startDate.format('M')),\n        year: this.startDate.year(),\n        day: Number(this.startDate.format('DD'))\n      };\n      this.dataMonths[startDay.year][startDay.month].forEach(d => d.isActive = (d.value === startDay.day));\n      this.dataMonths[endDay.year][endDay.month].forEach(d => {\n        if (!d.isActive) {\n          d.isActive = (d.value === endDay.day);\n        }\n      });\n    } else {\n      this.endDate = null;\n    }\n\n    this.currentMonth = this.navDate.month();\n    this.currentYear = this.navDate.year();\n    if (!this.maxDate) {\n      this.maxDate = this.navDate.clone().endOf('year').add(1, 'year');\n    }\n    if (!this.minDate) {\n      this.minDate = this.navDate.clone().startOf('year').subtract(1, 'year');\n    }\n    // this.applyRange()\n    if (this.showInitialValue) {\n      this.concatValueInput();\n    }\n\n  }\n\n  /**\n   *\n   * controlValueAccessor\n   */\n  onInput(value) {\n    this.value = value;\n    this.onTouch();\n    this.onChange(this.value);\n  }\n\n  writeValue(value: any): void {\n    if (value) {\n      this.value = value || '';\n    } else {\n      this.value = '';\n    }\n  }\n\n  registerOnChange(fn: any): void {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    this.onTouch = fn;\n  }\n\n  setDisabledState(isDisabled: boolean): void {\n    this.isDisabled = isDisabled;\n  }\n\n  /**\n   *\n   * @param num\n   * @param mode\n   */\n  addOrSubHour = (num: number, mode: string) => {\n    if (num > 0) {\n      this.checkHourValidate((Number(this.valueInputHour[mode]) + 1), mode);\n    } else {\n      this.checkHourValidate((Number(this.valueInputHour[mode]) - 1), mode);\n    }\n  };\n\n  addOrSubMinute = (num: number, mode: string) => {\n    if (num > 0) {\n      this.checkMinuteValidate((Number(this.valueInputMinute[mode]) + 1), mode);\n    } else {\n      this.checkMinuteValidate((Number(this.valueInputMinute[mode]) - 1), mode);\n    }\n  };\n\n  checkHourValidate = ($event, mode) => {\n    const toHour = (mode === 'start') ? 'start' : 'end';\n    if (this.meridianTime) {\n      this.valueInputHour[toHour] = $event;\n      if ($event <= 12 && $event > 0) {\n        if (mode === 'start' && this.startDate && this.startDate.format('A') === 'PM') {\n          if ($event === 12) {\n            this.startDate.set({ hour: ($event), minute: this.valueInputMinute[toHour], second: 0, millisecond: 0 });\n          } else {\n            this.startDate.set({ hour: ($event + 12), minute: this.valueInputMinute[toHour], second: 0, millisecond: 0 });\n          }\n        }\n        if (mode === 'start' && this.startDate && this.startDate.format('A') === 'AM') {\n          this.startDate.set({ hour: ($event), minute: this.valueInputMinute[toHour], second: 0, millisecond: 0 });\n        }\n\n        if (mode === 'end' && this.endDate && this.endDate.format('A') === 'PM') {\n          if ($event === 12) {\n            this.endDate.set({ hour: ($event), minute: this.valueInputMinute[toHour], second: 0, millisecond: 0 });\n          } else {\n            this.endDate.set({ hour: ($event + 12), minute: this.valueInputMinute[toHour], second: 0, millisecond: 0 });\n          }\n        }\n        if (mode === 'end' && this.endDate && this.endDate.format('A') === 'AM') {\n          this.endDate.set({ hour: ($event), minute: this.valueInputMinute[toHour], second: 0, millisecond: 0 });\n        }\n        if (mode === 'start' && this.endDate && this.endDate.format('A') === 'PM') {\n          this.startDate.set({ hour: this.valueInputHour[toHour] + 12, minute: this.valueInputMinute[toHour], second: 0, millisecond: 0 });\n        }\n      }\n    } else {\n      if ($event >= 0 && $event <= 23) {\n        this.valueInputHour[toHour] = $event;\n        if (mode === 'end') {\n          this.endDate.set({ hour: ($event), minute: this.valueInputMinute[toHour], second: 0, millisecond: 0 });\n        }\n        if (mode === 'start') {\n          this.startDate.set({ hour: this.valueInputHour[toHour], minute: this.valueInputMinute[toHour], second: 0, millisecond: 0 });\n        }\n      }\n    }\n\n    this.reFormatInput();\n  };\n\n  checkMinuteValidate = ($event, mode: string) => {\n    const toHour = (mode === 'start') ? 'start' : 'end';\n    this.valueInputMinute[toHour] = $event;\n    if ($event < 0) {\n      this.valueInputMinute[toHour] = 59;\n    } else if ($event > 59) {\n      this.valueInputMinute[toHour] = 0;\n    }\n    if (mode === 'start') {\n      this.startDate.set({ minute: this.valueInputMinute[toHour], second: 0, millisecond: 0 });\n    }\n    if (mode === 'end') {\n      this.endDate.set({ minute: this.valueInputMinute[toHour], second: 0, millisecond: 0 });\n    }\n    this.reFormatInput();\n  };\n\n  changeMeridianTime = (newMeridian, mode) => {\n    const isStartOrEnd = (mode === 'start') ? 'startDate' : 'endDate';\n    if (newMeridian === 'AM' && this[isStartOrEnd].hours() > 12) {\n      this[isStartOrEnd].hours(this[isStartOrEnd].hours() - 12);\n    } else if (newMeridian === 'PM' && this[isStartOrEnd].hours() <= 12) {\n      this[isStartOrEnd].hours(this[isStartOrEnd].hours() + 12);\n    } else if (newMeridian === 'AM' && this.startDate.hours() <= 12) {\n      this[isStartOrEnd].hours(this[isStartOrEnd].hours() - 1);\n    }\n    if (mode === 'start') {\n      this.valueInputHour[mode] = this[isStartOrEnd].hours(this[isStartOrEnd].hours()).format('hh');\n    }\n    if (mode === 'end') {\n      this.valueInputHour[mode] = this[isStartOrEnd].hours(this[isStartOrEnd].hours()).format('hh');\n    }\n    this.reFormatInput();\n  };\n\n  setOptions() {\n    moment.locale(this.locale);\n    this.generateAllGrid();\n    this.formatInputTime = (this.meridianTime) ? `D MMM, YYYY hh:mm A` : `D MMM, YYYY HH:mm`;\n    // this.includeEndDate = false;\n    // this.includeTime = false;\n  }\n\n  /**\n   * Concat values date to string format for show in input\n   */\n  concatValueInput = () => {\n    const concatValue = [\n      this.startDate.format(this.formatInputDate),\n      (this.endDate) ? '  -  ' : '',\n      (this.endDate) ? this.endDate.format(this.formatInputDate) : ''\n    ];\n    this.value = concatValue.join('');\n    this.isInvalid = !(this.value.length);\n    this.selected = {\n      startDate: (this.startDate) ? this.startDate.toDate() : null,\n      endDate: (this.endDate) ? this.endDate.toDate() : null\n    };\n\n  };\n\n  setAccess() {\n    this.canAccessPrevious = this.canChangeNavMonth(-1);\n    this.canAccessNext = this.canChangeNavMonth(1);\n  }\n\n  changeNavMonth(num: number, mode = 'next') {\n    if (this.canChangeNavMonth(num)) {\n      this.navDate.add(num, 'month');\n      this.currentMonth = this.navDate.month() + 1;\n      this.currentYear = this.navDate.year();\n      this.makeGridCustom(this.currentYear, this.currentMonth);\n    }\n  }\n\n  generateAllGrid = () => {\n    const dateObjectCurrent = moment().startOf('year').clone();\n    [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12].forEach(a => {\n      this.makeGridCustom(dateObjectCurrent.year(), a);\n    });\n\n  };\n\n  canChangeNavMonth(num: number) {\n    const clonedDate = moment(this.navDate);\n    return this.canChangeNavMonthLogic(num, clonedDate);\n  }\n\n  makeHeader() {\n    const weekDaysArr: Array<number> = [0, 1, 2, 3, 4, 5, 6];\n    weekDaysArr.forEach(day => this.weekDaysHeaderArr.push(moment().weekday(day).format('ddd')));\n  }\n\n  getDimensions(date: any) {\n    const firstDayDate = moment(date).startOf('month');\n    this.initialEmptyCells = firstDayDate.weekday();\n    const lastDayDate = moment(date).endOf('month');\n    this.lastEmptyCells = 6 - lastDayDate.weekday();\n    this.arrayLength = this.initialEmptyCells + this.lastEmptyCells + date.daysInMonth();\n  }\n\n  makeGridCustom = (year = null, month = null) => {\n    /**\n     * Fix\n     */\n\n    const dateOfTurn = moment(`${year}-${month}-01`, 'YYYY-M-DD');\n\n    /**\n     * Is OK\n     */\n    if (!this.dataMonths.hasOwnProperty(year)) {\n      this.dataMonths[year] = {};\n    }\n\n    /**\n     * Is OK\n     */\n    if (!this.dataMonths[year].hasOwnProperty(month)) {\n      this.dataMonths[year][month] = [];\n\n      /**\n       * Fix\n       */\n\n      const firstDayDate = moment(dateOfTurn).startOf('month');\n      const lastDayDate = moment(dateOfTurn).endOf('month');\n      this.dataMonths[year][`initialEmptyCells${month}`] = firstDayDate.weekday();\n      this.dataMonths[year][`lastEmptyCells${month}`] = 6 - lastDayDate.weekday();\n\n      const initEmptyCell = this.dataMonths[year][`initialEmptyCells${month}`];\n      const lastEmptyCell = this.dataMonths[year][`lastEmptyCells${month}`];\n\n      this.dataMonths[year][`arrayLength${month}`] = initEmptyCell + lastEmptyCell + dateOfTurn.daysInMonth();\n\n      const arrayLengths = this.dataMonths[year][`arrayLength${month}`];\n\n      this.getDimensions(dateOfTurn);\n      for (let i = 0; i < arrayLengths; i++) {\n        const obj: any = {};\n        if (i < initEmptyCell || i > initEmptyCell + dateOfTurn.daysInMonth() - 1) {\n          obj.value = 0;\n          obj.available = false;\n          obj.isToday = false;\n        } else {\n          obj.value = i - initEmptyCell + 1;\n          obj.available = this.isAvailable(i - initEmptyCell + 1);\n          obj.isToday = this.isToday(i - initEmptyCell + 1, month, year);\n          obj.month = month;\n          obj.date = dateOfTurn;\n          obj.year = year;\n          obj.isActive = false;\n          if (this.dateFromDayAndMonthAndYear(obj.value, month, year).isSame(this.startDate)) {\n            this.startDay = obj;\n          }\n          if (this.dateFromDayAndMonthAndYear(obj.value, month, year).isSame(this.endDate)) {\n            this.endDay = obj;\n          }\n          if (obj.isToday && !this.startDay && !this.endDay) {\n            this.startDay = obj;\n            this.endDay = obj;\n            obj.isActive = true;\n          }\n        }\n        obj.inRange = false;\n        this.dataMonths[year][month].push(obj);\n      }\n    }\n  };\n\n  isAvailable(num: number): boolean {\n    const dateToCheck = this.dateFromNum(num, this.navDate);\n    return this.isAvailableLogic(dateToCheck);\n  }\n\n  isToday(num: number, month: number, year: number): boolean {\n    const dateToCheck = moment(this.dateFromDayAndMonthAndYear(num, month, year));\n    return dateToCheck.isSame(moment().set({ hour: 0, minute: 0, second: 0, millisecond: 0 }));\n  }\n\n  dateFromNum(num: number, referenceDate: any): any {\n    const returnDate = moment(referenceDate);\n    return returnDate.date(num);\n  }\n\n  reFormatInput = () => {\n    this.formatInputDate = (this.includeTime) ? this.formatInputTime : this.formatInputDate;\n    this.concatValueInput();\n  };\n\n  selectDay(day: any) {\n    if (day.available) {\n      this.selectedDate = this.dateFromDayAndMonthAndYear(day.value, day.month, day.year);\n      if (this.includeEndDate) {\n        const currDate = this.dateFromDayAndMonthAndYear(day.value, day.month, day.year);\n        switch (this.mode) {\n          case 'end':\n            if (currDate.isSame(moment(this.startDate).startOf('day'))) {\n              this.mode = 'start';\n            } else if (currDate.isSameOrBefore(this.startDate)) {\n              this.endDay = this.startDay;\n              this.startDay = day;\n              this.mode = 'start';\n            } else {\n              this.endDay = day;\n            }\n            break;\n          case 'start':\n            if (currDate.isSame(moment(this.endDate).startOf('day'))) {\n              this.mode = 'end';\n            } else if (currDate.isSameOrAfter(this.endDate)) {\n              this.startDay = this.endDay;\n              this.endDay = day;\n              this.mode = 'end';\n            } else {\n              this.startDay = day;\n            }\n            break;\n        }\n\n        this.startDate = this.generateDate(this.startDay, this.startDate);\n        this.endDate = this.generateDate(this.endDay, this.endDate);\n        this.applyRange();\n        this.startDay.isActive = true;\n        this.endDay.isActive = true;\n        this.selected = {\n          startDate: this.startDate.toDate(),\n          endDate: this.endDate.toDate()\n        };\n      } else {\n        this.resetActivity();\n\n        this.startDate = this.selectedDate;\n        this.startDay = day;\n        this.startDay.isActive = true;\n        this.selected = {\n          startDate: this.startDate.toDate(),\n          endDate: null\n        };\n        this.emitSelected.emit(this.selected);\n      }\n      if (this.startDate && this.endDate) {\n        this.emitSelected.emit(this.selected);\n      }\n      this.reFormatInput();\n    }\n  }\n\n  generateDate(day: any, date: any) {\n    let generatedDate = this.dateFromDayAndMonthAndYear(day.value, day.month, day.year);\n    if (date) {\n      generatedDate = generatedDate.set({ hour: date.hour(), minute: date.minute() });\n    }\n    return generatedDate;\n  }\n\n  resetRange() {\n    Object.keys(this.dataMonths).forEach(year => {\n      Object.keys(this.dataMonths[year]).forEach(month => {\n        if (!isNaN(Number(month))) {\n          this.dataMonths[year][month].map(day => {\n            day.inRange = false;\n            day.isActive = false;\n          });\n        }\n\n      });\n    });\n  }\n\n  resetActivity() {\n    Object.keys(this.dataMonths).forEach(year => {\n      Object.keys(this.dataMonths[year]).forEach(month => {\n        if (!isNaN(Number(month))) {\n          this.dataMonths[year][month].map(day => {\n            day.isActive = false;\n          });\n        }\n      });\n    });\n  }\n\n  dateFromDayAndMonthAndYear(day, month, year) {\n    let timeObject = { hour: 0, minute: 0, second: 0, millisecond: 0 };\n    if (this.includeTime) {\n      timeObject = { hour: this.startDate.hour(), minute: this.startDate.minute(), second: 0, millisecond: 0 };\n      this.startDate.format('h:mm A');\n    }\n    return moment(`${year}-${month}-${day}`, 'YYYY-M-DD').set(timeObject);\n  }\n\n  applyRange() {\n    this.getDimensions(this.startDate);\n    const start = this.initialEmptyCells + this.startDay.value - 1;\n    const startMonthLength = this.arrayLength;\n    this.getDimensions(this.endDate);\n    const endMonthLength = this.arrayLength;\n    const end = this.initialEmptyCells + this.endDay.value - 1;\n    this.resetRange();\n    if (this.startDay.month !== this.endDay.month || this.startDay.year !== this.endDay.year) {\n      Object.keys(this.dataMonths).forEach(year => {\n        const calendar = this.dataMonths[year];\n        Object.keys(calendar).forEach(month => {\n          if (!isNaN(Number(month))) {\n            const days = this.dataMonths[year][month];\n            if (Number(month) === Number(this.startDay.month) && Number(year) === Number(this.startDay.year)) {\n              for (let i = 0; i < start; i++) {\n                days[i].inRange = false;\n              }\n              for (let i = start; i < startMonthLength; i++) {\n                days[i].inRange = true;\n              }\n            } else if (Number(month) === Number(this.endDay.month) && Number(year) === Number(this.endDay.year)) {\n              for (let i = 0; i <= end; i++) {\n                days[i].inRange = true;\n              }\n              for (let i = end + 1; i < endMonthLength; i++) {\n                days[i].inRange = false;\n              }\n            } else if ((month > this.startDay.month || year > this.startDay.year)\n              && (month < this.endDay.month || year < this.endDay.year)) {\n              days.forEach(day => day.inRange = true);\n            }\n          }\n        });\n      });\n    } else {\n      const month = this.startDay.month;\n      const year = this.startDay.year;\n      for (let i = 0; i < start; i++) {\n        this.dataMonths[year][month][i].inRange = false;\n      }\n      for (let i = start; i <= end; i++) {\n        this.dataMonths[year][month][i].inRange = true;\n      }\n      for (let i = end + 1; i < this.arrayLength; i++) {\n        this.dataMonths[year][month][i].inRange = false;\n      }\n    }\n  }\n\n  isAvailableLogic(dateToCheck: any) {\n    if (this.minDate || this.maxDate) {\n      return !(dateToCheck.isBefore(this.minDate) || dateToCheck.isAfter(this.maxDate));\n    } else {\n      return !dateToCheck.isBefore(moment(), 'day');\n    }\n  }\n\n  canChangeNavMonthLogic(num, currentDate) {\n    currentDate.add(num, 'month');\n    const minDate = this.minDate ? this.minDate : moment().add(-1, 'month');\n    const maxDate = this.maxDate ? this.maxDate : moment().add(1, 'year');\n    return currentDate.isBetween(minDate, maxDate);\n  }\n\n  toggleCalendar(): any {\n    this.isOpen = !this.isOpen;\n    this.reFormatInput();\n  }\n\n  openCalendar(): any {\n    this.isOpen = true;\n    this.onTouch();\n  }\n\n  closeCalendar(): any {\n    this.isOpen = false;\n    this.reFormatInput();\n    this.emitSelected.emit(this.selected);\n\n  }\n\n  changeMode(mode: string) {\n    this.mode = mode;\n    this.onTouch();\n  }\n\n  clear() {\n    this.resetRange();\n    this.startDate = moment();\n    this.endDate = null;\n    this.navDate = this.todayDate;\n    this.currentMonth = this.navDate.month();\n    this.currentYear = this.navDate.year();\n    this.includeEndDate = false;\n    this.includeTime = false;\n    this.startTime = null;\n    this.endTime = null;\n    this.mode = 'start';\n    this.makeGridCustom(this.currentYear, this.currentMonth);\n    this.reFormatInput();\n  }\n\n  setTime(moment, hour: number = 0, minute: number = 0) {\n    return moment.set({ hour, minute, second: 0, millisecond: 0 });\n  }\n\n  handleModeChange() {\n    this.resetRange();\n    this.mode = 'end';\n    if (this.startDay) {\n      this.startDay.isActive = true;\n    }\n    if (!this.includeEndDate) {\n      this.endDate = null;\n      this.mode = 'start';\n      this.startDay.isActive = false;\n      this.endDay.isActive = false;\n    } else {\n      const tmpStartDate = this.startDate.clone();\n      // const nextDay = tmpStartDate.add(2, 'days').format(`YYYY-${tmpStartDate.format('M') - 1}-D`);\n      // this.simulateClick(nextDay, 'calendar-day-not-range');\n    }\n\n  }\n\n  setStartTime(time) {\n    this.startTime = time;\n  }\n\n  setEndTime(time) {\n    this.endTime = time;\n  }\n\n  handleTimeChange(time: any, moment: any, mode: string) {\n    this.reFormatInput();\n    if (!time) {\n      return;\n    }\n    time = time.replace(/[^a-zA-Z0-9]/g, '');\n    moment.set({ hour: 0, minute: 0, second: 0, millisecond: 0 });\n    let lastTwo = time.substr(time.length - 2).toUpperCase();\n    let last = time.substr(time.length - 1).toUpperCase();\n    const hasLastTwo = ['AM', 'PM'].includes(lastTwo);\n    const hasLast = ['A', 'P'].includes(last);\n    let isAm = true;\n    let isPm = false;\n    if (hasLast || hasLastTwo) {\n      isAm = last === 'A' || lastTwo === 'AM';\n      isPm = last === 'P' || lastTwo === 'PM';\n    }\n    time = time.replace(/[^0-9]/g, '');\n    lastTwo = time.substr(time.length - 2);\n    last = time.substr(time.length - 1);\n    time = time.substr(0, 4);\n    this.isInvalid = false;\n    switch (time.length) {\n      case 1:\n        moment\n          = isAm ? this.setTime(moment, Number(time)) :\n            this.setTime(moment, Number(time) + 12);\n        break;\n      case 2:\n        if (last >= 6) {\n          this.isInvalid = true;\n          break;\n        }\n        if (time === 12) {\n          moment\n            = isAm ? this.setTime(moment, 0) :\n              this.setTime(moment, 12);\n        } else if (time < 12) {\n          moment\n            = isAm ? this.setTime(moment, Number(time)) :\n              this.setTime(moment, Number(time) + 12);\n        } else {\n          moment\n            = isAm ? this.setTime(moment, Number(time[0]), Number(last)) :\n              this.setTime(moment, Number(time[0]) + 12, Number(last));\n        }\n        break;\n      case 3:\n        if (lastTwo >= 60) {\n          this.isInvalid = true;\n          break;\n        } else {\n          moment\n            = isAm ? this.setTime(moment, Number(time[0]), Number(lastTwo)) :\n              this.setTime(moment, Number(time[0]) + 12, Number(lastTwo));\n        }\n        break;\n      case 4:\n        if (lastTwo >= 60) {\n          this.isInvalid = true;\n          break;\n        }\n        moment = this.setTime(moment, Number(time.substr(0, 2)), Number(lastTwo));\n        break;\n      default:\n        this.isInvalid = true;\n        break;\n    }\n    this.emitSelected.emit(this.selected);\n    if (mode === 'start') {\n      this.startDate = moment;\n      this.startTimePicker.nativeElement.blur();\n    } else {\n      this.endDate = moment;\n      this.endTimePicker.nativeElement.blur();\n    }\n  }\n\n}\n","import {Directive, ElementRef, EventEmitter, HostListener, Output} from '@angular/core';\n\n@Directive({\n  selector: '[clickOutside]'\n})\nexport class OutSideDirective {\n\n  @Output() clickOutside = new EventEmitter<void>();\n\n  constructor(private elementRef: ElementRef) {\n  }\n\n  @HostListener('document:click', ['$event.target'])\n  public onClick(target) {\n    const classElement = target.classList || [];\n    if (!Array.from(classElement).includes('omit-trigger-outside')) {\n      const clickedInside = this.elementRef.nativeElement.contains(target);\n      if (!clickedInside) {\n        this.clickOutside.emit();\n      }\n    }\n\n  }\n}\n","import { Directive, ElementRef, HostListener, Input } from '@angular/core';\n\n@Directive({\n  selector: '[libCheckInput]'\n})\nexport class CheckInputDirective {\n  private tmpValue: any;\n  inputElement: ElementRef;\n\n  constructor(el: ElementRef) {\n    this.inputElement = el;\n  }\n\n  @HostListener('keypress', ['$event']) onKeyPress(event) {\n    this.tmpValue = (this.inputElement.nativeElement.value.length > 2) ? 1 : this.inputElement.nativeElement.value;\n    this.integerOnly(event);\n  }\n\n  @HostListener('keyup', ['$event']) onKeyUp(event) {\n    this.checkLength(event);\n  }\n\n  checkLength(event) {\n    const value = this.inputElement.nativeElement.value;\n    if (!isNaN(value)) {\n      if (value.toString().length > 2) {\n        this.inputElement.nativeElement.value = this.tmpValue\n        event.preventDefault();\n      }\n    } else {\n      event.preventDefault();\n    }\n  }\n\n  integerOnly(event) {\n\n\n    const e = event as KeyboardEvent;\n    if (e.key === 'Tab' || e.key === 'TAB') {\n      return;\n    }\n    if ([46, 8, 9, 27, 13, 110].indexOf(e.keyCode) !== -1 ||\n      // Allow: Ctrl+A\n      (e.keyCode === 65 && e.ctrlKey === true) ||\n      // Allow: Ctrl+C\n      (e.keyCode === 67 && e.ctrlKey === true) ||\n      // Allow: Ctrl+V\n      (e.keyCode === 86 && e.ctrlKey === true) ||\n      // Allow: Ctrl+X\n      (e.keyCode === 88 && e.ctrlKey === true)) {\n      // let it happen, don't do anything\n      return;\n    }\n    if (['1', '2', '3', '4', '5', '6', '7', '8', '9', '0'].indexOf(e.key) === -1) {\n      e.preventDefault();\n    }\n  }\n\n\n}\n","import { NgModule } from '@angular/core';\nimport { NgxFunnyDatepickerComponent } from './ngx-funny-datepicker.component';\nimport { DatepickerComponent } from './datepicker/datepicker.component';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { OutSideDirective } from './out-side.directive';\nimport { CheckInputDirective } from './check-input.directive';\n\n\n\n@NgModule({\n  declarations: [NgxFunnyDatepickerComponent, DatepickerComponent, OutSideDirective, CheckInputDirective],\n  imports: [\n    CommonModule,\n    FormsModule\n  ],\n  exports: [DatepickerComponent]\n})\nexport class NgxFunnyDatepickerModule { }\n"]}