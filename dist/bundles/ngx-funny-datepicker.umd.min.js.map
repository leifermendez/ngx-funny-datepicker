{"version":3,"sources":["ng://ngx-funny-datepicker/lib/ngx-funny-datepicker.service.ts","ng://ngx-funny-datepicker/lib/ngx-funny-datepicker.component.ts","ng://ngx-funny-datepicker/lib/datepicker/datepicker.component.ts","ng://ngx-funny-datepicker/lib/out-side.directive.ts","ng://ngx-funny-datepicker/lib/ngx-funny-datepicker.module.ts"],"names":["NgxFunnyDatepickerService","Injectable","args","providedIn","NgxFunnyDatepickerComponent","_this","this","valueDate","EventEmitter","isRange","hasTime","emitValue","data","emit","prototype","ngOnInit","Component","selector","template","Output","moment","moment_","DatepickerComponent","startDate","emitSelected","locale","weekDaysHeaderArr","gridArr","canAccessPrevious","canAccessNext","todayDate","set","hour","minute","second","millisecond","mode","isInvalid","formatInputDate","concatValueInput","concatValue","format","endDate","inputValueOutput","join","reFormatInput","simulateClick","date","setTimeout","getDayNext","document","querySelector","click","e","setOptions","navDate","makeHeader","currentMonth","month","currentYear","year","makeGrid","includeEndDate","includeTime","setAccess","canChangeNavMonth","changeNavMonth","num","add","clonedDate","canChangeNavMonthLogic","forEach","day","push","weekday","getDimensions","firstDayDate","startOf","initialEmptyCells","lastDayDate","endOf","lastEmptyCells","arrayLength","daysInMonth","hasOwnProperty","i","obj","value","available","isToday","isAvailable","isActive","dateFromDayAndMonthAndYear","isSame","startDay","endDay","inRange","dateToCheck","dateFromNum","isAvailableLogic","referenceDate","selectDay","selectedDate","currDate","isSameOrBefore","isSameOrAfter","generateDate","applyRange","selected","resetActivity","generatedDate","resetRange","Object","keys","map","timeObject","start","startMonthLength","endMonthLength","end","calendar","days","minDate","maxDate","isBefore","isAfter","currentDate","isBetween","toggleCalendar","isOpen","openCalendar","closeCalendar","changeMode","clear","startTime","endTime","setTime","handleModeChange","tmpStartDate","clone","nextDay","setStartTime","time","setEndTime","handleTimeChange","replace","lastTwo","substr","length","toUpperCase","last","hasLastTwo","includes","isAm","Number","startTimePicker","nativeElement","blur","endTimePicker","ViewChild","Input","OutSideDirective","elementRef","clickOutside","onClick","target","classElement","classList","Array","from","contains","Directive","ElementRef","HostListener","NgxFunnyDatepickerModule","NgModule","declarations","imports","CommonModule","FormsModule","exports"],"mappings":"2bAAA,IAAAA,EAAA,WAOE,SAAAA,gCALDC,EAAAA,WAAUC,KAAA,CAAC,CACVC,WAAY,wJAHd,GCAAC,EAAA,WA2BE,SAAAA,IAAA,IAAAC,EAAAC,KARUA,KAAAC,UAAY,IAAIC,EAAAA,aAC1BF,KAAAG,SAAU,EACVH,KAAAI,SAAU,EAYVJ,KAAAK,UAAS,SAAIC,GAAS,OAAAP,EAAKE,UAAUM,KAAKD,IAE5C,OALER,EAAAU,UAAAC,SAAA,iCA5BDC,EAAAA,UAASd,KAAA,CAAC,CACTe,SAAU,uBACVC,SAAU,qWAeTC,EAAAA,UAgBHf,EAnCA,OCEMgB,EAASC,EAEfC,EAAA,WA2CE,SAAAA,IAAA,IAAAjB,EAAAC,KA/BSA,KAAAiB,UAAiBH,IAIhBd,KAAAkB,aAAe,IAAIhB,EAAAA,aAG7BF,KAAAmB,OAAS,KAETnB,KAAAoB,kBAAmC,GACnCpB,KAAAqB,QAAe,GAEfrB,KAAAsB,mBAAoB,EACpBtB,KAAAuB,eAAgB,EAChBvB,KAAAwB,UAAYV,IAASW,IAAI,CAAEC,KAAM,EAAGC,OAAQ,EAAGC,OAAQ,EAAGC,YAAa,IAGvE7B,KAAA8B,KAAO,MASP9B,KAAA+B,WAAY,EAGZ/B,KAAAgC,gBAAkB,cAwBlBhC,KAAAiC,iBAAgB,eACRC,EAAc,CAClBnC,EAAKkB,UAAUkB,OAAOpC,EAAKiC,iBAC1BjC,EAAY,QAAI,QAAU,GAC1BA,EAAY,QAAIA,EAAKqC,QAAQD,OAAOpC,EAAKiC,iBAAmB,IAE/DjC,EAAKsC,iBAAmBH,EAAYI,KAAK,KA2F3CtC,KAAAuC,cAAa,WACXxC,EAAKkC,mBACLlC,EAAKiC,gBAAmBjC,EAAgB,YAAI,qBAAuB,eAoNrEC,KAAAwC,cAAa,SAAIC,GACf,IACEC,YAAU,eACFC,EAAaC,SAASC,cAAc,2BAA2BJ,EAAI,aACrEE,GACFA,EAAWG,UAEZ,IACH,MAAOC,GACP,OAAO,OA0Fb,OA7aE/B,EAAAR,UAAAC,SAAA,WACET,KAAKgD,aACLlC,EAAOK,OAAOnB,KAAKmB,QACdnB,KAAKiB,YACRjB,KAAKiB,UAAYH,KAEnBd,KAAKiD,QAAUnC,IACfd,KAAKkD,aACLlD,KAAKmD,aAAenD,KAAKiD,QAAQG,QACjCpD,KAAKqD,YAAcrD,KAAKiD,QAAQK,OAChCtD,KAAKuD,SAASvD,KAAKqD,YAAarD,KAAKmD,cACrCnD,KAAKiC,oBAGPjB,EAAAR,UAAAwC,WAAA,WACEhD,KAAKwD,gBAAiB,EACtBxD,KAAKyD,aAAc,GAarBzC,EAAAR,UAAAkD,UAAA,WACE1D,KAAKsB,kBAAoBtB,KAAK2D,mBAAmB,GACjD3D,KAAKuB,cAAgBvB,KAAK2D,kBAAkB,IAG9C3C,EAAAR,UAAAoD,eAAA,SAAeC,GACT7D,KAAK2D,kBAAkBE,KACzB7D,KAAKiD,QAAQa,IAAID,EAAK,SACtB7D,KAAKmD,aAAenD,KAAKiD,QAAQG,QACjCpD,KAAKqD,YAAcrD,KAAKiD,QAAQK,OAChCtD,KAAKuD,SAASvD,KAAKqD,YAAarD,KAAKmD,gBAIzCnC,EAAAR,UAAAmD,kBAAA,SAAkBE,OACVE,EAAajD,EAAOd,KAAKiD,SAC/B,OAAOjD,KAAKgE,uBAAuBH,EAAKE,IAG1C/C,EAAAR,UAAA0C,WAAA,WAAA,IAAAnD,EAAAC,KACqC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC1CiE,SAAO,SAACC,GAAO,OAAAnE,EAAKqB,kBAAkB+C,KAAKrD,IAASsD,QAAQF,GAAK/B,OAAO,YAGtFnB,EAAAR,UAAA6D,cAAA,SAAc5B,OACN6B,EAAexD,EAAO2B,GAAM8B,QAAQ,SAC1CvE,KAAKwE,kBAAoBF,EAAaF,cAChCK,EAAc3D,EAAO2B,GAAMiC,MAAM,SACvC1E,KAAK2E,eAAiB,EAAIF,EAAYL,UACtCpE,KAAK4E,YAAc5E,KAAKwE,kBAAoBxE,KAAK2E,eAAiBlC,EAAKoC,eAGzE7D,EAAAR,UAAA+C,SAAA,SAASD,EAAMF,GAIb,GAHKpD,KAAKqB,QAAQyD,eAAexB,KAC/BtD,KAAKqB,QAAQiC,GAAQ,KAElBtD,KAAKqB,QAAQiC,GAAMwB,eAAe1B,GAAQ,CAC7CpD,KAAKqB,QAAQiC,GAAMF,GAAS,GAC5BpD,KAAKqE,cAAcrE,KAAKiD,SACxB,IAAK,IAAI8B,EAAI,EAAGA,EAAI/E,KAAK4E,YAAaG,IAAK,KACnCC,EAAW,GACbD,EAAI/E,KAAKwE,mBAAqBO,EAAI/E,KAAKwE,kBAAoBxE,KAAKiD,QAAQ4B,cAAgB,GAC1FG,EAAIC,MAAQ,EACZD,EAAIE,WAAY,EAChBF,EAAIG,SAAU,IAEdH,EAAIC,MAAQF,EAAI/E,KAAKwE,kBAAoB,EACzCQ,EAAIE,UAAYlF,KAAKoF,YAAYL,EAAI/E,KAAKwE,kBAAoB,GAC9DQ,EAAIG,QAAUnF,KAAKmF,QAAQJ,EAAI/E,KAAKwE,kBAAoB,EAAGpB,EAAOE,GAClE0B,EAAI5B,MAAQA,EACZ4B,EAAIvC,KAAOzC,KAAKiD,QAChB+B,EAAI1B,KAAOA,EACX0B,EAAIK,UAAW,EACXrF,KAAKsF,2BAA2BN,EAAIC,MAAO7B,EAAOE,GAAMiC,OAAOvF,KAAKiB,aACtEjB,KAAKwF,SAAWR,GAEdhF,KAAKsF,2BAA2BN,EAAIC,MAAO7B,EAAOE,GAAMiC,OAAOvF,KAAKoC,WACtEpC,KAAKyF,OAAST,IAEZA,EAAIG,SAAYnF,KAAKwF,UAAaxF,KAAKyF,SACzCzF,KAAKwF,SAAWR,EAChBhF,KAAKyF,OAAST,EACdA,EAAIK,UAAW,IAGnBL,EAAIU,SAAU,EACd1F,KAAKqB,QAAQiC,GAAMF,GAAOe,KAAKa,IAGnChF,KAAK0D,aAGP1C,EAAAR,UAAA4E,YAAA,SAAYvB,OACJ8B,EAAc3F,KAAK4F,YAAY/B,EAAK7D,KAAKiD,SAC/C,OAAOjD,KAAK6F,iBAAiBF,IAG/B3E,EAAAR,UAAA2E,QAAA,SAAQtB,EAAaT,EAAeE,GAElC,OADoBxC,EAAOd,KAAKsF,2BAA2BzB,EAAKT,EAAOE,IACpDiC,OAAOzE,IAASW,IAAI,CAAEC,KAAM,EAAGC,OAAQ,EAAGC,OAAQ,EAAGC,YAAa,MAGvFb,EAAAR,UAAAoF,YAAA,SAAY/B,EAAaiC,GAEvB,OADmBhF,EAAOgF,GACRrD,KAAKoB,IAQzB7C,EAAAR,UAAAuF,UAAA,SAAU7B,GACR,GAAIA,EAAIgB,UAAW,CAEjB,GADAlF,KAAKgG,aAAehG,KAAKsF,2BAA2BpB,EAAIe,MAAOf,EAAId,MAAOc,EAAIZ,MAC1EtD,KAAKwD,eAAgB,KACjByC,EAAWjG,KAAKsF,2BAA2BpB,EAAIe,MAAOf,EAAId,MAAOc,EAAIZ,MAC3E,OAAQtD,KAAK8B,MACX,IAAK,MACCmE,EAASV,OAAOzE,EAAOd,KAAKiB,WAAWsD,QAAQ,QACjDvE,KAAK8B,KAAO,QACHmE,EAASC,eAAelG,KAAKiB,YACtCjB,KAAKyF,OAASzF,KAAKwF,SACnBxF,KAAKwF,SAAWtB,EAChBlE,KAAK8B,KAAO,SAEZ9B,KAAKyF,OAASvB,EAEhB,MACF,IAAK,QACC+B,EAASV,OAAOzE,EAAOd,KAAKoC,SAASmC,QAAQ,QAC/CvE,KAAK8B,KAAO,MACHmE,EAASE,cAAcnG,KAAKoC,UACrCpC,KAAKwF,SAAWxF,KAAKyF,OACrBzF,KAAKyF,OAASvB,EACdlE,KAAK8B,KAAO,OAEZ9B,KAAKwF,SAAWtB,EAItBlE,KAAKiB,UAAYjB,KAAKoG,aAAapG,KAAKwF,SAAUxF,KAAKiB,WACvDjB,KAAKoC,QAAUpC,KAAKoG,aAAapG,KAAKyF,OAAQzF,KAAKoC,SACnDpC,KAAKqG,aACLrG,KAAKwF,SAASH,UAAW,EACzBrF,KAAKyF,OAAOJ,UAAW,EACvBrF,KAAKsG,SAAW,CACdrF,UAAWjB,KAAKiB,UAChBmB,QAASpC,KAAKoC,cAGhBpC,KAAKuG,gBACLvG,KAAKiB,UAAYjB,KAAKgG,aACtBhG,KAAKwF,SAAWtB,EAChBlE,KAAKwF,SAASH,UAAW,EACzBrF,KAAKsG,SAAW,CACdrF,UAAWjB,KAAKiB,WAElBjB,KAAKkB,aAAaX,KAAKP,KAAKsG,UAE1BtG,KAAKiB,WAAajB,KAAKoC,SACzBpC,KAAKkB,aAAaX,KAAKP,KAAKsG,UAE9BtG,KAAKuC,kBAITvB,EAAAR,UAAA4F,aAAA,SAAalC,EAAUzB,OACjB+D,EAAgBxG,KAAKsF,2BAA2BpB,EAAIe,MAAOf,EAAId,MAAOc,EAAIZ,MAI9E,OAHIb,IACF+D,EAAgBA,EAAc/E,IAAI,CAAEC,KAAMe,EAAKf,OAAQC,OAAQc,EAAKd,YAE/D6E,GAGTxF,EAAAR,UAAAiG,WAAA,WAAA,IAAA1G,EAAAC,KACE0G,OAAOC,KAAK3G,KAAKqB,SAAS4C,SAAO,SAACX,GAChCoD,OAAOC,KAAK5G,EAAKsB,QAAQiC,IAAOW,SAAO,SAACb,GACtCrD,EAAKsB,QAAQiC,GAAMF,GAAOwD,KAAG,SAAC1C,GAC5BA,EAAIwB,SAAU,EACdxB,EAAImB,UAAW,YAMvBrE,EAAAR,UAAA+F,cAAA,WAAA,IAAAxG,EAAAC,KACE0G,OAAOC,KAAK3G,KAAKqB,SAAS4C,SAAO,SAACX,GAChCoD,OAAOC,KAAK5G,EAAKsB,QAAQiC,IAAOW,SAAO,SAACb,GACtCrD,EAAKsB,QAAQiC,GAAMF,GAAOwD,KAAG,SAAC1C,GAC5BA,EAAImB,UAAW,YAMvBrE,EAAAR,UAAA8E,2BAAA,SAA2BpB,EAAKd,EAAOE,OACjCuD,EAAa,CAAEnF,KAAM,EAAGC,OAAQ,EAAGC,OAAQ,EAAGC,YAAa,GAK/D,OAJI7B,KAAKyD,cACPoD,EAAa,CAAEnF,KAAM1B,KAAKiB,UAAUS,OAAQC,OAAQ3B,KAAKiB,UAAUU,SAAUC,OAAQ,EAAGC,YAAa,GACrG7B,KAAKiB,UAAUkB,OAAO,WAEjBrB,EAAO,CAACwC,EAAMF,EAAOc,IAAMzC,IAAIoF,IAGxC7F,EAAAR,UAAA6F,WAAA,WAAA,IAAAtG,EAAAC,KACEA,KAAKqE,cAAcrE,KAAKiB,eAClB6F,EAAQ9G,KAAKwE,kBAAoBxE,KAAKwF,SAASP,MAAQ,EACvD8B,EAAmB/G,KAAK4E,YAC9B5E,KAAKqE,cAAcrE,KAAKoC,aAClB4E,EAAiBhH,KAAK4E,YACtBqC,EAAMjH,KAAKwE,kBAAoBxE,KAAKyF,OAAOR,MAAQ,EAEzD,GADAjF,KAAKyG,aACDzG,KAAKwF,SAASpC,QAAUpD,KAAKyF,OAAOrC,OAASpD,KAAKwF,SAASlC,OAAStD,KAAKyF,OAAOnC,KAClFoD,OAAOC,KAAK3G,KAAKqB,SAAS4C,SAAO,SAACX,OAC1B4D,EAAWnH,EAAKsB,QAAQiC,GAC9BoD,OAAOC,KAAKO,GAAUjD,SAAO,SAACb,OACtB+D,EAAOpH,EAAKsB,QAAQiC,GAAMF,GAChC,GAAIA,GAASrD,EAAKyF,SAASpC,OAASE,GAAQvD,EAAKyF,SAASlC,KAAM,CAC9D,IAAK,IAAIyB,EAAI,EAAGA,EAAI+B,EAAO/B,IACzBoC,EAAKpC,GAAGW,SAAU,EAEpB,IAASX,EAAI+B,EAAO/B,EAAIgC,EAAkBhC,IACxCoC,EAAKpC,GAAGW,SAAU,OAEf,GAAItC,GAASrD,EAAK0F,OAAOrC,OAASE,GAAQvD,EAAK0F,OAAOnC,KAAM,CACjE,IAASyB,EAAI,EAAGA,GAAKkC,EAAKlC,IACxBoC,EAAKpC,GAAGW,SAAU,EAEpB,IAASX,EAAIkC,EAAM,EAAGlC,EAAIiC,EAAgBjC,IACxCoC,EAAKpC,GAAGW,SAAU,OAEVtC,EAAQrD,EAAKyF,SAASpC,OAASE,EAAOvD,EAAKyF,SAASlC,QAAUF,EAAQrD,EAAK0F,OAAOrC,OAASE,EAAOvD,EAAK0F,OAAOnC,OACxH6D,EAAKlD,SAAO,SAACC,GAAO,OAAAA,EAAIwB,SAAU,eAInC,CAGL,QAFMtC,EAAQpD,KAAKwF,SAASpC,MACtBE,EAAOtD,KAAKwF,SAASlC,KAClByB,EAAI,EAAGA,EAAI+B,EAAO/B,IACzB/E,KAAKqB,QAAQiC,GAAMF,GAAO2B,GAAGW,SAAU,EAEzC,IAASX,EAAI+B,EAAO/B,GAAKkC,EAAKlC,IAC5B/E,KAAKqB,QAAQiC,GAAMF,GAAO2B,GAAGW,SAAU,EAEzC,IAASX,EAAIkC,EAAM,EAAGlC,EAAI/E,KAAK4E,YAAaG,IAC1C/E,KAAKqB,QAAQiC,GAAMF,GAAO2B,GAAGW,SAAU,IAK7C1E,EAAAR,UAAAqF,iBAAA,SAAiBF,GACf,OAAI3F,KAAKoH,SAAWpH,KAAKqH,UACd1B,EAAY2B,SAAStH,KAAKoH,UAAYzB,EAAY4B,QAAQvH,KAAKqH,WAEhE1B,EAAY2B,SAASxG,IAAU,QAI3CE,EAAAR,UAAAwD,uBAAA,SAAuBH,EAAK2D,GAC1BA,EAAY1D,IAAID,EAAK,aACfuD,EAAUpH,KAAKoH,QAAUpH,KAAKoH,QAAUtG,IAASgD,KAAK,EAAG,SACzDuD,EAAUrH,KAAKqH,QAAUrH,KAAKqH,QAAUvG,IAASgD,IAAI,EAAG,QAC9D,OAAO0D,EAAYC,UAAUL,EAASC,IAGxCrG,EAAAR,UAAAkH,eAAA,WACE1H,KAAK2H,QAAU3H,KAAK2H,QAGtB3G,EAAAR,UAAAoH,aAAA,WACE5H,KAAK2H,QAAS,GAGhB3G,EAAAR,UAAAqH,cAAA,WACE7H,KAAK2H,QAAS,GAGhB3G,EAAAR,UAAAsH,WAAA,SAAWhG,GACT9B,KAAK8B,KAAOA,GAGdd,EAAAR,UAAAuH,MAAA,WACE/H,KAAKyG,aACLzG,KAAKiB,UAAYH,IACjBd,KAAKoC,QAAU,KACfpC,KAAKiD,QAAUjD,KAAKwB,UACpBxB,KAAKmD,aAAenD,KAAKiD,QAAQG,QACjCpD,KAAKqD,YAAcrD,KAAKiD,QAAQK,OAChCtD,KAAKwD,gBAAiB,EACtBxD,KAAKyD,aAAc,EACnBzD,KAAKgI,UAAY,KACjBhI,KAAKiI,QAAU,KACfjI,KAAK8B,KAAO,QACZ9B,KAAKuD,SAASvD,KAAKqD,YAAarD,KAAKmD,eAGvCnC,EAAAR,UAAA0H,QAAA,SAAQpH,EAAQY,EAAkBC,GAChC,YADc,IAAAD,IAAAA,EAAA,QAAkB,IAAAC,IAAAA,EAAA,GACzBb,EAAOW,IAAI,CAAEC,KAAIA,EAAEC,OAAMA,EAAEC,OAAQ,EAAGC,YAAa,KAG5Db,EAAAR,UAAA2H,iBAAA,WAME,GALAnI,KAAKyG,aACLzG,KAAK8B,KAAO,MACR9B,KAAKwF,WACPxF,KAAKwF,SAASH,UAAW,GAEtBrF,KAAKwD,eAKH,KACC4E,EAAepI,KAAKiB,UAAUoH,QAC9BC,EAAUF,EAAatE,IAAI,EAAG,QAAQ3B,OAAO,SAAQiG,EAAajG,OAAO,KAAO,GAAC,MACvFnC,KAAKwC,cAAc8F,QAPnBtI,KAAKoC,QAAU,KACfpC,KAAK8B,KAAO,QACZ9B,KAAKwF,SAASH,UAAW,EACzBrF,KAAKyF,OAAOJ,UAAW,GAsB3BrE,EAAAR,UAAA+H,aAAA,SAAaC,GACXxI,KAAKgI,UAAYQ,GAGnBxH,EAAAR,UAAAiI,WAAA,SAAWD,GACTxI,KAAKiI,QAAUO,GAIjBxH,EAAAR,UAAAkI,iBAAA,SAAiBF,EAAW1H,EAAagB,GAEvC,GADA9B,KAAKuC,gBACAiG,EAAL,CAGAA,EAAOA,EAAKG,QAAQ,gBAAiB,IACrC7H,EAAOW,IAAI,CAAEC,KAAM,EAAGC,OAAQ,EAAGC,OAAQ,EAAGC,YAAa,QACrD+G,EAAUJ,EAAKK,OAAOL,EAAKM,OAAS,GAAGC,cACvCC,EAAOR,EAAKK,OAAOL,EAAKM,OAAS,GAAGC,cAClCE,EAAa,CAAC,KAAM,MAAMC,SAASN,GAErCO,GAAO,EAWX,QAZgB,CAAC,IAAK,KAAKD,SAASF,IAGrBC,KACbE,EAAgB,MAATH,GAA4B,OAAZJ,EACP,MAATI,GAA4B,OAAZJ,GAGzBA,GADAJ,EAAOA,EAAKG,QAAQ,UAAW,KAChBE,OAAOL,EAAKM,OAAS,GACpCE,EAAOR,EAAKK,OAAOL,EAAKM,OAAS,GACjCN,EAAOA,EAAKK,OAAO,EAAG,GACtB7I,KAAK+B,WAAY,EACTyG,EAAKM,QACX,KAAK,EACHhI,EACIqI,EAAOnJ,KAAKkI,QAAQpH,EAAQsI,OAAOZ,IACnCxI,KAAKkI,QAAQpH,EAAQsI,OAAOZ,GAAQ,IACxC,MACF,KAAK,EACH,GAAIQ,GAAQ,EAAG,CACbhJ,KAAK+B,WAAY,EACjB,MAGAjB,EADW,KAAT0H,EAEEW,EAAOnJ,KAAKkI,QAAQpH,EAAQ,GAC5Bd,KAAKkI,QAAQpH,EAAQ,IAChB0H,EAAO,GAEZW,EAAOnJ,KAAKkI,QAAQpH,EAAQsI,OAAOZ,IACnCxI,KAAKkI,QAAQpH,EAAQsI,OAAOZ,GAAQ,IAGpCW,EAAOnJ,KAAKkI,QAAQpH,EAAQsI,OAAOZ,EAAK,IAAKY,OAAOJ,IACpDhJ,KAAKkI,QAAQpH,EAAQsI,OAAOZ,EAAK,IAAM,GAAIY,OAAOJ,IAExD,MACF,KAAK,EACH,GAAIJ,GAAW,GAAI,CACjB5I,KAAK+B,WAAY,EACjB,MAEAjB,EACIqI,EAAOnJ,KAAKkI,QAAQpH,EAAQsI,OAAOZ,EAAK,IAAKY,OAAOR,IACpD5I,KAAKkI,QAAQpH,EAAQsI,OAAOZ,EAAK,IAAM,GAAIY,OAAOR,IAExD,MACF,KAAK,EACH,GAAIA,GAAW,GAAI,CACjB5I,KAAK+B,WAAY,EACjB,MAEFjB,EAASd,KAAKkI,QAAQpH,EAAQsI,OAAOZ,EAAKK,OAAO,EAAG,IAAKO,OAAOR,IAChE,MACF,QACE5I,KAAK+B,WAAY,EAGR,UAATD,GACF9B,KAAKiB,UAAYH,EACjBd,KAAKqJ,gBAAgBC,cAAcC,SAEnCvJ,KAAKoC,QAAUtB,EACfd,KAAKwJ,cAAcF,cAAcC,8BAvdtC7I,EAAAA,UAASd,KAAA,CAAC,CACTe,SAAU,0BACVC,SAAA,w5UAKC6I,EAAAA,UAAS7J,KAAA,CAAC,0CAEV6J,EAAAA,UAAS7J,KAAA,CAAC,kCACV8J,EAAAA,uBACAA,EAAAA,yBACAA,EAAAA,uBACAA,EAAAA,uBACAA,EAAAA,uBACAA,EAAAA,4BACA7I,EAAAA,UA2cHG,EA3dA,GCJA,IAAA2I,EAAA,WASE,SAAAA,EAAoBC,GAAA5J,KAAA4J,WAAAA,EAFV5J,KAAA6J,aAAe,IAAI3J,EAAAA,aAgB/B,OAVSyJ,EAAAnJ,UAAAsJ,QADP,SACeC,OACPC,EAAeD,EAAOE,WAAa,GACpCC,MAAMC,KAAKH,GAAcd,SAAS,0BACflJ,KAAK4J,WAAWN,cAAcc,SAASL,IAE3D/J,KAAK6J,aAAatJ,6BAhBzB8J,EAAAA,UAASzK,KAAA,CAAC,CACTe,SAAU,8DAHO2J,EAAAA,oDAOhBzJ,EAAAA,wBAKA0J,EAAAA,aAAY3K,KAAA,CAAC,iBAAkB,CAAC,qBAWnC+J,EAvBA,GCAA,IAAAa,EAAA,WASA,SAAAA,KAQwC,2BARvCC,EAAAA,SAAQ7K,KAAA,CAAC,CACR8K,aAAc,CAAC5K,EAA6BkB,EAAqB2I,GACjEgB,QAAS,CACPC,EAAAA,aACAC,EAAAA,aAEFC,QAAS,CAAChL,OAE4B0K,EAjBxC","sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NgxFunnyDatepickerService {\n\n  constructor() { }\n}\n","import {Component, EventEmitter, OnInit, Output} from '@angular/core';\n\n@Component({\n  selector: 'ngx-funny-datepicker',\n  template: `\n    <funny-datepicker-single\n      [isRange]=\"isRange\"\n      [hasTime]=\"hasTime\"\n      [startDate]=\"startDate\"\n      [endDate]=\"endDate\"\n      [maxDate]=\"maxDate\"\n      [minDate]=\"minDate\"\n      (emitSelected)=\"emitValue($event)\"\n    ></funny-datepicker-single>\n\n  `,\n  styles: []\n})\nexport class NgxFunnyDatepickerComponent implements OnInit {\n  @Output() valueDate = new EventEmitter<any>();\n  isRange = true;\n  hasTime = true;\n  startDate: any;\n  endDate: any;\n  maxDate: any;\n  minDate: any;\n\n  constructor() {\n  }\n\n  ngOnInit() {\n  }\n\n  emitValue = (data) => this.valueDate.emit(data);\n\n}\n","import { Component, OnInit, Input, Output, EventEmitter, ViewChild, ElementRef } from '@angular/core';\nimport * as moment_ from 'moment';\nconst moment = moment_;\n\n@Component({\n  selector: 'funny-datepicker-single',\n  templateUrl: './datepicker.component.html',\n  styleUrls: ['./datepicker.component.css']\n})\nexport class DatepickerComponent implements OnInit {\n  // @ts-ignore\n  @ViewChild('startTimePicker') startTimePicker: ElementRef;\n  // @ts-ignore\n  @ViewChild('endTimePicker') endTimePicker: ElementRef;\n  @Input() isRange: boolean;\n  @Input() hasTime: boolean;\n  @Input() startDate: any = moment();\n  @Input() endDate: any;\n  @Input() minDate: any;\n  @Input() maxDate: any;\n  @Output() emitSelected = new EventEmitter<any>();\n  inputValueOutput: string;\n  isOpen: boolean;\n  locale = 'en';\n  navDate: any;\n  weekDaysHeaderArr: Array<string> = [];\n  gridArr: any = {};\n  selectedDate: any;\n  canAccessPrevious = true;\n  canAccessNext = true;\n  todayDate = moment().set({ hour: 0, minute: 0, second: 0, millisecond: 0 });\n  startDay: any;\n  endDay: any;\n  mode = 'end';\n  initialEmptyCells: number;\n  lastEmptyCells: number;\n  arrayLength: number;\n  currentMonth: number;\n  currentYear: number;\n  selected: any;\n  startTime: any;\n  endTime: any;\n  isInvalid = false;\n  includeEndDate: boolean;\n  includeTime: boolean;\n  formatInputDate = 'D MMM, YYYY';\n\n  constructor() {\n  }\n\n  ngOnInit() {\n    this.setOptions();\n    moment.locale(this.locale);\n    if (!this.startDate) {\n      this.startDate = moment();\n    }\n    this.navDate = moment();\n    this.makeHeader();\n    this.currentMonth = this.navDate.month();\n    this.currentYear = this.navDate.year();\n    this.makeGrid(this.currentYear, this.currentMonth);\n    this.concatValueInput();\n  }\n\n  setOptions() {\n    this.includeEndDate = false;\n    this.includeTime = false;\n  }\n\n  concatValueInput = () => {\n    const concatValue = [\n      this.startDate.format(this.formatInputDate),\n      (this.endDate) ? '  -  ' : '',\n      (this.endDate) ? this.endDate.format(this.formatInputDate) : ''\n    ];\n    this.inputValueOutput = concatValue.join('');\n\n  };\n\n  setAccess() {\n    this.canAccessPrevious = this.canChangeNavMonth(-1);\n    this.canAccessNext = this.canChangeNavMonth(1);\n  }\n\n  changeNavMonth(num: number) {\n    if (this.canChangeNavMonth(num)) {\n      this.navDate.add(num, 'month');\n      this.currentMonth = this.navDate.month();\n      this.currentYear = this.navDate.year();\n      this.makeGrid(this.currentYear, this.currentMonth);\n    }\n  }\n\n  canChangeNavMonth(num: number) {\n    const clonedDate = moment(this.navDate);\n    return this.canChangeNavMonthLogic(num, clonedDate);\n  }\n\n  makeHeader() {\n    const weekDaysArr: Array<number> = [0, 1, 2, 3, 4, 5, 6];\n    weekDaysArr.forEach(day => this.weekDaysHeaderArr.push(moment().weekday(day).format('ddd')));\n  }\n\n  getDimensions(date: any) {\n    const firstDayDate = moment(date).startOf('month');\n    this.initialEmptyCells = firstDayDate.weekday();\n    const lastDayDate = moment(date).endOf('month');\n    this.lastEmptyCells = 6 - lastDayDate.weekday();\n    this.arrayLength = this.initialEmptyCells + this.lastEmptyCells + date.daysInMonth();\n  }\n\n  makeGrid(year, month) {\n    if (!this.gridArr.hasOwnProperty(year)) {\n      this.gridArr[year] = {};\n    }\n    if (!this.gridArr[year].hasOwnProperty(month)) {\n      this.gridArr[year][month] = [];\n      this.getDimensions(this.navDate);\n      for (let i = 0; i < this.arrayLength; i++) {\n        const obj: any = {};\n        if (i < this.initialEmptyCells || i > this.initialEmptyCells + this.navDate.daysInMonth() - 1) {\n          obj.value = 0;\n          obj.available = false;\n          obj.isToday = false;\n        } else {\n          obj.value = i - this.initialEmptyCells + 1;\n          obj.available = this.isAvailable(i - this.initialEmptyCells + 1);\n          obj.isToday = this.isToday(i - this.initialEmptyCells + 1, month, year);\n          obj.month = month;\n          obj.date = this.navDate;\n          obj.year = year;\n          obj.isActive = false;\n          if (this.dateFromDayAndMonthAndYear(obj.value, month, year).isSame(this.startDate)) {\n            this.startDay = obj;\n          }\n          if (this.dateFromDayAndMonthAndYear(obj.value, month, year).isSame(this.endDate)) {\n            this.endDay = obj;\n          }\n          if (obj.isToday && !this.startDay && !this.endDay) {\n            this.startDay = obj;\n            this.endDay = obj;\n            obj.isActive = true;\n          }\n        }\n        obj.inRange = false;\n        this.gridArr[year][month].push(obj);\n      }\n    }\n    this.setAccess();\n  }\n\n  isAvailable(num: number): boolean {\n    const dateToCheck = this.dateFromNum(num, this.navDate);\n    return this.isAvailableLogic(dateToCheck);\n  }\n\n  isToday(num: number, month: number, year: number): boolean {\n    const dateToCheck = moment(this.dateFromDayAndMonthAndYear(num, month, year));\n    return dateToCheck.isSame(moment().set({ hour: 0, minute: 0, second: 0, millisecond: 0 }));\n  }\n\n  dateFromNum(num: number, referenceDate: any): any {\n    const returnDate = moment(referenceDate);\n    return returnDate.date(num);\n  }\n\n  reFormatInput = () => {\n    this.concatValueInput();\n    this.formatInputDate = (this.includeTime) ? 'D MMM, YYYY h:mm A' : 'D MMM, YYYY';\n  };\n\n  selectDay(day: any) {\n    if (day.available) {\n      this.selectedDate = this.dateFromDayAndMonthAndYear(day.value, day.month, day.year);\n      if (this.includeEndDate) {\n        const currDate = this.dateFromDayAndMonthAndYear(day.value, day.month, day.year);\n        switch (this.mode) {\n          case 'end':\n            if (currDate.isSame(moment(this.startDate).startOf('day'))) {\n              this.mode = 'start';\n            } else if (currDate.isSameOrBefore(this.startDate)) {\n              this.endDay = this.startDay;\n              this.startDay = day;\n              this.mode = 'start';\n            } else {\n              this.endDay = day;\n            }\n            break;\n          case 'start':\n            if (currDate.isSame(moment(this.endDate).startOf('day'))) {\n              this.mode = 'end';\n            } else if (currDate.isSameOrAfter(this.endDate)) {\n              this.startDay = this.endDay;\n              this.endDay = day;\n              this.mode = 'end';\n            } else {\n              this.startDay = day;\n            }\n            break;\n        }\n        this.startDate = this.generateDate(this.startDay, this.startDate);\n        this.endDate = this.generateDate(this.endDay, this.endDate);\n        this.applyRange();\n        this.startDay.isActive = true;\n        this.endDay.isActive = true;\n        this.selected = {\n          startDate: this.startDate,\n          endDate: this.endDate\n        };\n      } else {\n        this.resetActivity();\n        this.startDate = this.selectedDate;\n        this.startDay = day;\n        this.startDay.isActive = true;\n        this.selected = {\n          startDate: this.startDate\n        };\n        this.emitSelected.emit(this.selected);\n      }\n      if (this.startDate && this.endDate) {\n        this.emitSelected.emit(this.selected);\n      }\n      this.reFormatInput();\n    }\n  }\n\n  generateDate(day: any, date: any) {\n    let generatedDate = this.dateFromDayAndMonthAndYear(day.value, day.month, day.year);\n    if (date) {\n      generatedDate = generatedDate.set({ hour: date.hour(), minute: date.minute() });\n    }\n    return generatedDate;\n  }\n\n  resetRange() {\n    Object.keys(this.gridArr).forEach(year => {\n      Object.keys(this.gridArr[year]).forEach(month => {\n        this.gridArr[year][month].map(day => {\n          day.inRange = false;\n          day.isActive = false;\n        });\n      });\n    });\n  }\n\n  resetActivity() {\n    Object.keys(this.gridArr).forEach(year => {\n      Object.keys(this.gridArr[year]).forEach(month => {\n        this.gridArr[year][month].map(day => {\n          day.isActive = false;\n        });\n      });\n    });\n  }\n\n  dateFromDayAndMonthAndYear(day, month, year) {\n    let timeObject = { hour: 0, minute: 0, second: 0, millisecond: 0 };\n    if (this.includeTime) {\n      timeObject = { hour: this.startDate.hour(), minute: this.startDate.minute(), second: 0, millisecond: 0 };\n      this.startDate.format('h:mm A');\n    }\n    return moment([year, month, day]).set(timeObject);\n  }\n\n  applyRange() {\n    this.getDimensions(this.startDate);\n    const start = this.initialEmptyCells + this.startDay.value - 1;\n    const startMonthLength = this.arrayLength;\n    this.getDimensions(this.endDate);\n    const endMonthLength = this.arrayLength;\n    const end = this.initialEmptyCells + this.endDay.value - 1;\n    this.resetRange();\n    if (this.startDay.month !== this.endDay.month || this.startDay.year !== this.endDay.year) {\n      Object.keys(this.gridArr).forEach(year => {\n        const calendar = this.gridArr[year];\n        Object.keys(calendar).forEach(month => {\n          const days = this.gridArr[year][month];\n          if (month == this.startDay.month && year == this.startDay.year) {\n            for (let i = 0; i < start; i++) {\n              days[i].inRange = false;\n            }\n            for (let i = start; i < startMonthLength; i++) {\n              days[i].inRange = true;\n            }\n          } else if (month == this.endDay.month && year == this.endDay.year) {\n            for (let i = 0; i <= end; i++) {\n              days[i].inRange = true;\n            }\n            for (let i = end + 1; i < endMonthLength; i++) {\n              days[i].inRange = false;\n            }\n          } else if ((month > this.startDay.month || year > this.startDay.year) && (month < this.endDay.month || year < this.endDay.year)) {\n            days.forEach(day => day.inRange = true);\n          }\n        });\n      });\n    } else {\n      const month = this.startDay.month;\n      const year = this.startDay.year;\n      for (let i = 0; i < start; i++) {\n        this.gridArr[year][month][i].inRange = false;\n      }\n      for (let i = start; i <= end; i++) {\n        this.gridArr[year][month][i].inRange = true;\n      }\n      for (let i = end + 1; i < this.arrayLength; i++) {\n        this.gridArr[year][month][i].inRange = false;\n      }\n    }\n  }\n\n  isAvailableLogic(dateToCheck: any) {\n    if (this.minDate || this.maxDate) {\n      return !(dateToCheck.isBefore(this.minDate) || dateToCheck.isAfter(this.maxDate));\n    } else {\n      return !dateToCheck.isBefore(moment(), 'day');\n    }\n  }\n\n  canChangeNavMonthLogic(num, currentDate) {\n    currentDate.add(num, 'month');\n    const minDate = this.minDate ? this.minDate : moment().add(-1, 'month');\n    const maxDate = this.maxDate ? this.maxDate : moment().add(1, 'year');\n    return currentDate.isBetween(minDate, maxDate);\n  }\n\n  toggleCalendar(): any {\n    this.isOpen = !this.isOpen;\n  }\n\n  openCalendar(): any {\n    this.isOpen = true;\n  }\n\n  closeCalendar(): any {\n    this.isOpen = false;\n  }\n\n  changeMode(mode: string) {\n    this.mode = mode;\n  }\n\n  clear() {\n    this.resetRange();\n    this.startDate = moment();\n    this.endDate = null;\n    this.navDate = this.todayDate;\n    this.currentMonth = this.navDate.month();\n    this.currentYear = this.navDate.year();\n    this.includeEndDate = false;\n    this.includeTime = false;\n    this.startTime = null;\n    this.endTime = null;\n    this.mode = 'start';\n    this.makeGrid(this.currentYear, this.currentMonth);\n  }\n\n  setTime(moment, hour: number = 0, minute: number = 0) {\n    return moment.set({ hour, minute, second: 0, millisecond: 0 });\n  }\n\n  handleModeChange() {\n    this.resetRange();\n    this.mode = 'end';\n    if (this.startDay) {\n      this.startDay.isActive = true;\n    }\n    if (!this.includeEndDate) {\n      this.endDate = null;\n      this.mode = 'start';\n      this.startDay.isActive = false;\n      this.endDay.isActive = false;\n    } else {\n      const tmpStartDate = this.startDate.clone();\n      const nextDay = tmpStartDate.add(2, 'days').format(`YYYY-${tmpStartDate.format('M') - 1}-D`);\n      this.simulateClick(nextDay);\n    }\n\n  }\n\n  simulateClick = (date: string) => {\n    try {\n      setTimeout(() => {\n        const getDayNext = document.querySelector(`.calendar-day-not-range-${date} > button`) as any;\n        if (getDayNext) {\n          getDayNext.click();\n        }\n      }, 50);\n    } catch (e) {\n      return null;\n    }\n  };\n\n  setStartTime(time) {\n    this.startTime = time;\n  }\n\n  setEndTime(time) {\n    this.endTime = time;\n  }\n\n  // tslint:disable-next-line:no-shadowed-variable\n  handleTimeChange(time: any, moment: any, mode: string) {\n    this.reFormatInput();\n    if (!time) {\n      return;\n    }\n    time = time.replace(/[^a-zA-Z0-9]/g, '');\n    moment.set({ hour: 0, minute: 0, second: 0, millisecond: 0 });\n    let lastTwo = time.substr(time.length - 2).toUpperCase();\n    let last = time.substr(time.length - 1).toUpperCase();\n    const hasLastTwo = ['AM', 'PM'].includes(lastTwo);\n    const hasLast = ['A', 'P'].includes(last);\n    let isAm = true;\n    let isPm = false;\n    if (hasLast || hasLastTwo) {\n      isAm = last === 'A' || lastTwo === 'AM';\n      isPm = last === 'P' || lastTwo === 'PM';\n    }\n    time = time.replace(/[^0-9]/g, '');\n    lastTwo = time.substr(time.length - 2);\n    last = time.substr(time.length - 1);\n    time = time.substr(0, 4);\n    this.isInvalid = false;\n    switch (time.length) {\n      case 1:\n        moment\n          = isAm ? this.setTime(moment, Number(time)) :\n            this.setTime(moment, Number(time) + 12);\n        break;\n      case 2:\n        if (last >= 6) {\n          this.isInvalid = true;\n          break;\n        }\n        if (time === 12) {\n          moment\n            = isAm ? this.setTime(moment, 0) :\n              this.setTime(moment, 12);\n        } else if (time < 12) {\n          moment\n            = isAm ? this.setTime(moment, Number(time)) :\n              this.setTime(moment, Number(time) + 12);\n        } else {\n          moment\n            = isAm ? this.setTime(moment, Number(time[0]), Number(last)) :\n              this.setTime(moment, Number(time[0]) + 12, Number(last));\n        }\n        break;\n      case 3:\n        if (lastTwo >= 60) {\n          this.isInvalid = true;\n          break;\n        } else {\n          moment\n            = isAm ? this.setTime(moment, Number(time[0]), Number(lastTwo)) :\n              this.setTime(moment, Number(time[0]) + 12, Number(lastTwo));\n        }\n        break;\n      case 4:\n        if (lastTwo >= 60) {\n          this.isInvalid = true;\n          break;\n        }\n        moment = this.setTime(moment, Number(time.substr(0, 2)), Number(lastTwo));\n        break;\n      default:\n        this.isInvalid = true;\n        break;\n    }\n    if (mode === 'start') {\n      this.startDate = moment;\n      this.startTimePicker.nativeElement.blur();\n    } else {\n      this.endDate = moment;\n      this.endTimePicker.nativeElement.blur();\n    }\n  }\n\n}\n","import {Directive, ElementRef, EventEmitter, HostListener, Output} from '@angular/core';\n\n@Directive({\n  selector: '[clickOutside]'\n})\nexport class OutSideDirective {\n\n  @Output() clickOutside = new EventEmitter<void>();\n\n  constructor(private elementRef: ElementRef) {\n  }\n\n  @HostListener('document:click', ['$event.target'])\n  public onClick(target) {\n    const classElement = target.classList || [];\n    if (!Array.from(classElement).includes('omit-trigger-outside')) {\n      const clickedInside = this.elementRef.nativeElement.contains(target);\n      if (!clickedInside) {\n        this.clickOutside.emit();\n      }\n    }\n\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { NgxFunnyDatepickerComponent } from './ngx-funny-datepicker.component';\nimport { DatepickerComponent } from './datepicker/datepicker.component';\nimport {CommonModule} from '@angular/common';\nimport {FormsModule} from '@angular/forms';\nimport { OutSideDirective } from './out-side.directive';\n\n\n\n@NgModule({\n  declarations: [NgxFunnyDatepickerComponent, DatepickerComponent, OutSideDirective],\n  imports: [\n    CommonModule,\n    FormsModule\n  ],\n  exports: [NgxFunnyDatepickerComponent]\n})\nexport class NgxFunnyDatepickerModule { }\n"]}