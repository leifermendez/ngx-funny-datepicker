{"version":3,"sources":["../../src/lib/ngx-funny-datepicker.service.ts","../../src/lib/ngx-funny-datepicker.component.ts","../../src/lib/datepicker/datepicker.component.ts","../../src/lib/out-side.directive.ts","../../src/lib/ngx-funny-datepicker.module.ts"],"names":["Injectable","args","providedIn","NgxFunnyDatepickerComponent","_this","this","valueDate","EventEmitter","startDate","moment","locale","rangeLabel","timeLabel","clearLabel","emitValue","data","emit","prototype","ngOnInit","Component","selector","template","Output","Input","moment_","DatepickerComponent","value","emitSelected","weekDaysHeaderArr","gridArr","canAccessPrevious","canAccessNext","todayDate","set","hour","minute","second","millisecond","mode","isInvalid","formatInputDate","onChange","_","onTouch","onTouched","concatValueInput","concatValue","format","endDate","join","reFormatInput","simulateClick","date","setTimeout","getDayNext","document","querySelector","click","e","setOptions","navDate","makeHeader","currentMonth","month","currentYear","year","makeGrid","onInput","writeValue","registerOnChange","fn","registerOnTouched","setDisabledState","isDisabled","includeEndDate","includeTime","setAccess","canChangeNavMonth","changeNavMonth","num","add","clonedDate","canChangeNavMonthLogic","forEach","day","push","weekday","getDimensions","firstDayDate","startOf","initialEmptyCells","lastDayDate","endOf","lastEmptyCells","arrayLength","daysInMonth","hasOwnProperty","i","obj","available","isToday","isAvailable","isActive","dateFromDayAndMonthAndYear","isSame","startDay","endDay","inRange","dateToCheck","dateFromNum","isAvailableLogic","referenceDate","selectDay","selectedDate","currDate","isSameOrBefore","isSameOrAfter","generateDate","applyRange","selected","resetActivity","generatedDate","resetRange","Object","keys","map","timeObject","start","startMonthLength","endMonthLength","end","calendar","days","minDate","maxDate","isBefore","isAfter","currentDate","isBetween","toggleCalendar","isOpen","openCalendar","closeCalendar","changeMode","clear","startTime","endTime","setTime","handleModeChange","tmpStartDate","clone","nextDay","setStartTime","time","setEndTime","handleTimeChange","replace","lastTwo","substr","length","toUpperCase","last","hasLastTwo","includes","isAm","Number","console","log","startTimePicker","nativeElement","blur","endTimePicker","providers","provide","NG_VALUE_ACCESSOR","useExisting","forwardRef","multi","ViewChild","OutSideDirective","elementRef","clickOutside","onClick","target","classElement","classList","Array","from","contains","Directive","ElementRef","HostListener","NgModule","declarations","imports","CommonModule","FormsModule","exports"],"mappings":"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","sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NgxFunnyDatepickerService {\n\n  constructor() { }\n}\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport * as moment from 'moment';\n\n@Component({\n  selector: 'ngx-funny-datepicker-dummy',\n  template: `\n    Please use ngx-funny-datepicker\n  `,\n  styles: []\n})\nexport class NgxFunnyDatepickerComponent implements OnInit {\n  @Output() valueDate = new EventEmitter<any>();\n  @Input() isRange: boolean;\n  @Input() hasTime: boolean;\n  @Input() startDate: any = moment();\n  @Input() endDate: any;\n  @Input() minDate: any;\n  @Input() maxDate: any;\n  @Input() locale = 'en';\n  @Input() rangeLabel = 'Range';\n  @Input() timeLabel = 'Time';\n  @Input() clearLabel = 'Clear';\n  @Input() classInput: string;\n\n  constructor() {\n  }\n\n  ngOnInit() {\n  }\n\n  emitValue = (data) => this.valueDate.emit(data);\n\n}\n","import { Component, OnInit, Input, Output, EventEmitter, ViewChild, ElementRef, forwardRef } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport * as moment_ from 'moment';\nconst moment = moment_;\n\n@Component({\n  selector: 'ngx-funny-datepicker',\n  templateUrl: './datepicker.component.html',\n  styleUrls: ['./datepicker.component.css'],\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => DatepickerComponent),\n      multi: true\n    }\n  ]\n})\nexport class DatepickerComponent implements OnInit, ControlValueAccessor {\n  @Input() value: any = '';\n  // @ts-ignore\n  @ViewChild('startTimePicker') startTimePicker: ElementRef;\n  // @ts-ignore\n  @ViewChild('endTimePicker') endTimePicker: ElementRef;\n  @Input() isRange: boolean;\n  @Input() hasTime: boolean;\n  @Input() startDate: any;\n  @Input() endDate: any;\n  @Input() minDate: any;\n  @Input() maxDate: any;\n  @Input() classInput: string;\n  @Input() locale = 'en';\n  @Input() rangeLabel = 'Range';\n  @Input() timeLabel = 'Time';\n  @Input() clearLabel = 'Clear';\n  @Output() emitSelected = new EventEmitter<any>();\n  isOpen: boolean;\n  navDate: any;\n  weekDaysHeaderArr: Array<string> = [];\n  gridArr: any = {};\n  selectedDate: any;\n  canAccessPrevious = true;\n  canAccessNext = true;\n  todayDate = moment().set({ hour: 0, minute: 0, second: 0, millisecond: 0 });\n  startDay: any;\n  endDay: any;\n  mode = 'end';\n  initialEmptyCells: number;\n  lastEmptyCells: number;\n  arrayLength: number;\n  currentMonth: number;\n  currentYear: number;\n  selected: any;\n  startTime: any;\n  endTime: any;\n  isInvalid = false;\n  includeEndDate: boolean;\n  includeTime: boolean;\n  formatInputDate = 'D MMM, YYYY';\n  /**\n   * ControlAccessor\n   */\n  onTouched: boolean;\n  isDisabled: boolean;\n  onChange = (_: any) => { };\n  onTouch = () => {\n    this.onTouched = true\n  };\n\n  constructor() {\n  }\n\n  ngOnInit() {\n    this.setOptions();\n    moment.locale(this.locale);\n    if (!this.startDate) {\n      this.startDate = moment();\n    }\n    this.navDate = moment();\n    this.makeHeader();\n    this.currentMonth = this.navDate.month();\n    this.currentYear = this.navDate.year();\n    this.makeGrid(this.currentYear, this.currentMonth);\n    this.isInvalid = !(this.value.length)\n    // this.concatValueInput();\n  }\n\n  /**\n   *\n   * controlValueAccessor\n   */\n  onInput(value) {\n    this.value = value;\n    this.onTouch();\n    this.onChange(this.value);\n  }\n\n  writeValue(value: any): void {\n    if (value) {\n      this.value = value || '';\n    } else {\n      this.value = '';\n    }\n  }\n\n  registerOnChange(fn: any): void {\n    this.onChange = fn;\n  }\n  registerOnTouched(fn: any): void {\n    this.onTouch = fn;\n  }\n  setDisabledState(isDisabled: boolean): void {\n    this.isDisabled = isDisabled;\n  }\n\n  /**\n   *\n   * @param value\n   */\n\n\n  setOptions() {\n    this.includeEndDate = false;\n    this.includeTime = false;\n  }\n\n  concatValueInput = () => {\n    const concatValue = [\n      this.startDate.format(this.formatInputDate),\n      (this.endDate) ? '  -  ' : '',\n      (this.endDate) ? this.endDate.format(this.formatInputDate) : ''\n    ];\n    this.value = concatValue.join('');\n    this.isInvalid = !(this.value.length);\n\n  }\n\n  setAccess() {\n    this.canAccessPrevious = this.canChangeNavMonth(-1);\n    this.canAccessNext = this.canChangeNavMonth(1);\n  }\n\n  changeNavMonth(num: number) {\n    if (this.canChangeNavMonth(num)) {\n      this.navDate.add(num, 'month');\n      this.currentMonth = this.navDate.month();\n      this.currentYear = this.navDate.year();\n      this.makeGrid(this.currentYear, this.currentMonth);\n    }\n  }\n\n  canChangeNavMonth(num: number) {\n    const clonedDate = moment(this.navDate);\n    return this.canChangeNavMonthLogic(num, clonedDate);\n  }\n\n  makeHeader() {\n    const weekDaysArr: Array<number> = [0, 1, 2, 3, 4, 5, 6];\n    weekDaysArr.forEach(day => this.weekDaysHeaderArr.push(moment().weekday(day).format('ddd')));\n  }\n\n  getDimensions(date: any) {\n    const firstDayDate = moment(date).startOf('month');\n    this.initialEmptyCells = firstDayDate.weekday();\n    const lastDayDate = moment(date).endOf('month');\n    this.lastEmptyCells = 6 - lastDayDate.weekday();\n    this.arrayLength = this.initialEmptyCells + this.lastEmptyCells + date.daysInMonth();\n  }\n\n  makeGrid(year, month) {\n    if (!this.gridArr.hasOwnProperty(year)) {\n      this.gridArr[year] = {};\n    }\n    if (!this.gridArr[year].hasOwnProperty(month)) {\n      this.gridArr[year][month] = [];\n      this.getDimensions(this.navDate);\n      for (let i = 0; i < this.arrayLength; i++) {\n        const obj: any = {};\n        if (i < this.initialEmptyCells || i > this.initialEmptyCells + this.navDate.daysInMonth() - 1) {\n          obj.value = 0;\n          obj.available = false;\n          obj.isToday = false;\n        } else {\n          obj.value = i - this.initialEmptyCells + 1;\n          obj.available = this.isAvailable(i - this.initialEmptyCells + 1);\n          obj.isToday = this.isToday(i - this.initialEmptyCells + 1, month, year);\n          obj.month = month;\n          obj.date = this.navDate;\n          obj.year = year;\n          obj.isActive = false;\n          if (this.dateFromDayAndMonthAndYear(obj.value, month, year).isSame(this.startDate)) {\n            this.startDay = obj;\n          }\n          if (this.dateFromDayAndMonthAndYear(obj.value, month, year).isSame(this.endDate)) {\n            this.endDay = obj;\n          }\n          if (obj.isToday && !this.startDay && !this.endDay) {\n            this.startDay = obj;\n            this.endDay = obj;\n            obj.isActive = true;\n          }\n        }\n        obj.inRange = false;\n        this.gridArr[year][month].push(obj);\n      }\n    }\n    this.setAccess();\n  }\n\n  isAvailable(num: number): boolean {\n    const dateToCheck = this.dateFromNum(num, this.navDate);\n    return this.isAvailableLogic(dateToCheck);\n  }\n\n  isToday(num: number, month: number, year: number): boolean {\n    const dateToCheck = moment(this.dateFromDayAndMonthAndYear(num, month, year));\n    return dateToCheck.isSame(moment().set({ hour: 0, minute: 0, second: 0, millisecond: 0 }));\n  }\n\n  dateFromNum(num: number, referenceDate: any): any {\n    const returnDate = moment(referenceDate);\n    return returnDate.date(num);\n  }\n\n  reFormatInput = () => {\n    this.concatValueInput();\n    this.formatInputDate = (this.includeTime) ? 'D MMM, YYYY h:mm A' : 'D MMM, YYYY';\n  }\n\n  selectDay(day: any) {\n    if (day.available) {\n      this.selectedDate = this.dateFromDayAndMonthAndYear(day.value, day.month, day.year);\n      if (this.includeEndDate) {\n        const currDate = this.dateFromDayAndMonthAndYear(day.value, day.month, day.year);\n        switch (this.mode) {\n          case 'end':\n            if (currDate.isSame(moment(this.startDate).startOf('day'))) {\n              this.mode = 'start';\n            } else if (currDate.isSameOrBefore(this.startDate)) {\n              this.endDay = this.startDay;\n              this.startDay = day;\n              this.mode = 'start';\n            } else {\n              this.endDay = day;\n            }\n            break;\n          case 'start':\n            if (currDate.isSame(moment(this.endDate).startOf('day'))) {\n              this.mode = 'end';\n            } else if (currDate.isSameOrAfter(this.endDate)) {\n              this.startDay = this.endDay;\n              this.endDay = day;\n              this.mode = 'end';\n            } else {\n              this.startDay = day;\n            }\n            break;\n        }\n        this.startDate = this.generateDate(this.startDay, this.startDate);\n        this.endDate = this.generateDate(this.endDay, this.endDate);\n        this.applyRange();\n        this.startDay.isActive = true;\n        this.endDay.isActive = true;\n        this.selected = {\n          startDate: this.startDate,\n          endDate: this.endDate\n        };\n      } else {\n        this.resetActivity();\n        this.startDate = this.selectedDate;\n        this.startDay = day;\n        this.startDay.isActive = true;\n        this.selected = {\n          startDate: this.startDate\n        };\n        this.emitSelected.emit(this.selected);\n      }\n      if (this.startDate && this.endDate) {\n        this.emitSelected.emit(this.selected);\n      }\n      this.reFormatInput();\n    }\n  }\n\n  generateDate(day: any, date: any) {\n    let generatedDate = this.dateFromDayAndMonthAndYear(day.value, day.month, day.year);\n    if (date) {\n      generatedDate = generatedDate.set({ hour: date.hour(), minute: date.minute() });\n    }\n    return generatedDate;\n  }\n\n  resetRange() {\n    Object.keys(this.gridArr).forEach(year => {\n      Object.keys(this.gridArr[year]).forEach(month => {\n        this.gridArr[year][month].map(day => {\n          day.inRange = false;\n          day.isActive = false;\n        });\n      });\n    });\n  }\n\n  resetActivity() {\n    Object.keys(this.gridArr).forEach(year => {\n      Object.keys(this.gridArr[year]).forEach(month => {\n        this.gridArr[year][month].map(day => {\n          day.isActive = false;\n        });\n      });\n    });\n  }\n\n  dateFromDayAndMonthAndYear(day, month, year) {\n    let timeObject = { hour: 0, minute: 0, second: 0, millisecond: 0 };\n    if (this.includeTime) {\n      timeObject = { hour: this.startDate.hour(), minute: this.startDate.minute(), second: 0, millisecond: 0 };\n      this.startDate.format('h:mm A');\n    }\n    return moment([year, month, day]).set(timeObject);\n  }\n\n  applyRange() {\n    this.getDimensions(this.startDate);\n    const start = this.initialEmptyCells + this.startDay.value - 1;\n    const startMonthLength = this.arrayLength;\n    this.getDimensions(this.endDate);\n    const endMonthLength = this.arrayLength;\n    const end = this.initialEmptyCells + this.endDay.value - 1;\n    this.resetRange();\n    if (this.startDay.month !== this.endDay.month || this.startDay.year !== this.endDay.year) {\n      Object.keys(this.gridArr).forEach(year => {\n        const calendar = this.gridArr[year];\n        Object.keys(calendar).forEach(month => {\n          const days = this.gridArr[year][month];\n          if (month == this.startDay.month && year == this.startDay.year) {\n            for (let i = 0; i < start; i++) {\n              days[i].inRange = false;\n            }\n            for (let i = start; i < startMonthLength; i++) {\n              days[i].inRange = true;\n            }\n          } else if (month == this.endDay.month && year == this.endDay.year) {\n            for (let i = 0; i <= end; i++) {\n              days[i].inRange = true;\n            }\n            for (let i = end + 1; i < endMonthLength; i++) {\n              days[i].inRange = false;\n            }\n          } else if ((month > this.startDay.month || year > this.startDay.year) && (month < this.endDay.month || year < this.endDay.year)) {\n            days.forEach(day => day.inRange = true);\n          }\n        });\n      });\n    } else {\n      const month = this.startDay.month;\n      const year = this.startDay.year;\n      for (let i = 0; i < start; i++) {\n        this.gridArr[year][month][i].inRange = false;\n      }\n      for (let i = start; i <= end; i++) {\n        this.gridArr[year][month][i].inRange = true;\n      }\n      for (let i = end + 1; i < this.arrayLength; i++) {\n        this.gridArr[year][month][i].inRange = false;\n      }\n    }\n  }\n\n  isAvailableLogic(dateToCheck: any) {\n    if (this.minDate || this.maxDate) {\n      return !(dateToCheck.isBefore(this.minDate) || dateToCheck.isAfter(this.maxDate));\n    } else {\n      return !dateToCheck.isBefore(moment(), 'day');\n    }\n  }\n\n  canChangeNavMonthLogic(num, currentDate) {\n    currentDate.add(num, 'month');\n    const minDate = this.minDate ? this.minDate : moment().add(-1, 'month');\n    const maxDate = this.maxDate ? this.maxDate : moment().add(1, 'year');\n    return currentDate.isBetween(minDate, maxDate);\n  }\n\n  toggleCalendar(): any {\n    this.isOpen = !this.isOpen;\n  }\n\n  openCalendar(): any {\n    this.isOpen = true;\n    this.onTouch();\n  }\n\n  closeCalendar(): any {\n    this.isOpen = false;\n    this.emitSelected.emit(this.selected);\n  }\n\n  changeMode(mode: string) {\n    this.mode = mode;\n    this.onTouch()\n  }\n\n\n  clear() {\n    this.resetRange();\n    this.startDate = moment();\n    this.endDate = null;\n    this.navDate = this.todayDate;\n    this.currentMonth = this.navDate.month();\n    this.currentYear = this.navDate.year();\n    this.includeEndDate = false;\n    this.includeTime = false;\n    this.startTime = null;\n    this.endTime = null;\n    this.mode = 'start';\n    this.makeGrid(this.currentYear, this.currentMonth);\n    this.reFormatInput();\n  }\n\n  setTime(moment, hour: number = 0, minute: number = 0) {\n    return moment.set({ hour, minute, second: 0, millisecond: 0 });\n  }\n\n  handleModeChange() {\n    this.resetRange();\n    this.mode = 'end';\n    if (this.startDay) {\n      this.startDay.isActive = true;\n    }\n    if (!this.includeEndDate) {\n      this.endDate = null;\n      this.mode = 'start';\n      this.startDay.isActive = false;\n      this.endDay.isActive = false;\n    } else {\n      const tmpStartDate = this.startDate.clone();\n      const nextDay = tmpStartDate.add(2, 'days').format(`YYYY-${tmpStartDate.format('M') - 1}-D`);\n      this.simulateClick(nextDay);\n    }\n\n  }\n\n  simulateClick = (date: string) => {\n    try {\n      setTimeout(() => {\n        const getDayNext = document.querySelector(`.calendar-day-not-range-${date} > button`) as any;\n        if (getDayNext) {\n          getDayNext.click();\n        }\n      }, 50);\n    } catch (e) {\n      return null;\n    }\n  }\n\n  setStartTime(time) {\n    this.startTime = time;\n  }\n\n  setEndTime(time) {\n    this.endTime = time;\n  }\n\n  // tslint:disable-next-line:no-shadowed-variable\n  handleTimeChange(time: any, moment: any, mode: string) {\n    this.reFormatInput();\n    if (!time) {\n      return;\n    }\n    time = time.replace(/[^a-zA-Z0-9]/g, '');\n    moment.set({ hour: 0, minute: 0, second: 0, millisecond: 0 });\n    let lastTwo = time.substr(time.length - 2).toUpperCase();\n    let last = time.substr(time.length - 1).toUpperCase();\n    const hasLastTwo = ['AM', 'PM'].includes(lastTwo);\n    const hasLast = ['A', 'P'].includes(last);\n    let isAm = true;\n    let isPm = false;\n    if (hasLast || hasLastTwo) {\n      isAm = last === 'A' || lastTwo === 'AM';\n      isPm = last === 'P' || lastTwo === 'PM';\n    }\n    time = time.replace(/[^0-9]/g, '');\n    lastTwo = time.substr(time.length - 2);\n    last = time.substr(time.length - 1);\n    time = time.substr(0, 4);\n    this.isInvalid = false;\n    switch (time.length) {\n      case 1:\n        moment\n          = isAm ? this.setTime(moment, Number(time)) :\n            this.setTime(moment, Number(time) + 12);\n        break;\n      case 2:\n        if (last >= 6) {\n          this.isInvalid = true;\n          break;\n        }\n        if (time === 12) {\n          moment\n            = isAm ? this.setTime(moment, 0) :\n              this.setTime(moment, 12);\n        } else if (time < 12) {\n          moment\n            = isAm ? this.setTime(moment, Number(time)) :\n              this.setTime(moment, Number(time) + 12);\n        } else {\n          moment\n            = isAm ? this.setTime(moment, Number(time[0]), Number(last)) :\n              this.setTime(moment, Number(time[0]) + 12, Number(last));\n        }\n        break;\n      case 3:\n        if (lastTwo >= 60) {\n          this.isInvalid = true;\n          break;\n        } else {\n          moment\n            = isAm ? this.setTime(moment, Number(time[0]), Number(lastTwo)) :\n              this.setTime(moment, Number(time[0]) + 12, Number(lastTwo));\n        }\n        break;\n      case 4:\n        if (lastTwo >= 60) {\n          this.isInvalid = true;\n          break;\n        }\n        moment = this.setTime(moment, Number(time.substr(0, 2)), Number(lastTwo));\n        break;\n      default:\n        this.isInvalid = true;\n        break;\n    }\n    console.log('--', this.isInvalid)\n    this.emitSelected.emit(this.selected);\n    if (mode === 'start') {\n      this.startDate = moment;\n      this.startTimePicker.nativeElement.blur();\n    } else {\n      this.endDate = moment;\n      this.endTimePicker.nativeElement.blur();\n    }\n  }\n\n}\n","import {Directive, ElementRef, EventEmitter, HostListener, Output} from '@angular/core';\n\n@Directive({\n  selector: '[clickOutside]'\n})\nexport class OutSideDirective {\n\n  @Output() clickOutside = new EventEmitter<void>();\n\n  constructor(private elementRef: ElementRef) {\n  }\n\n  @HostListener('document:click', ['$event.target'])\n  public onClick(target) {\n    const classElement = target.classList || [];\n    if (!Array.from(classElement).includes('omit-trigger-outside')) {\n      const clickedInside = this.elementRef.nativeElement.contains(target);\n      if (!clickedInside) {\n        this.clickOutside.emit();\n      }\n    }\n\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { NgxFunnyDatepickerComponent } from './ngx-funny-datepicker.component';\nimport { DatepickerComponent } from './datepicker/datepicker.component';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { OutSideDirective } from './out-side.directive';\n\n\n\n@NgModule({\n  declarations: [NgxFunnyDatepickerComponent, DatepickerComponent, OutSideDirective],\n  imports: [\n    CommonModule,\n    FormsModule\n  ],\n  exports: [DatepickerComponent]\n})\nexport class NgxFunnyDatepickerModule { }\n"]}