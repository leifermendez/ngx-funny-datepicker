{"version":3,"sources":["../../src/lib/ngx-funny-datepicker.service.ts","../../src/lib/ngx-funny-datepicker.component.ts","../../src/lib/datepicker/datepicker.component.ts","../../src/lib/out-side.directive.ts","../../src/lib/check-input.directive.ts","../../src/lib/ngx-funny-datepicker.module.ts"],"names":["Injectable","args","providedIn","NgxFunnyDatepickerComponent","_this","this","valueDate","EventEmitter","startDate","moment","locale","rangeLabel","timeLabel","clearLabel","emitValue","data","emit","prototype","ngOnInit","Component","selector","template","Output","Input","moment_","DatepickerComponent","cdr","value","startDateChange","endDateChange","formatInputDate","formatInputTime","emitSelected","weekDaysHeaderArr","dataMonths","canAccessPrevious","canAccessNext","todayDate","set","hour","minute","second","millisecond","renderedFlag","mode","isInvalid","minInputHour","maxInputHour","valueInputHour","start","end","minInputMinute","maxInputMinute","valueInputMinute","onChange","_","onTouch","onTouched","addOrSubHour","num","checkHourValidate","Number","addOrSubMinute","checkMinuteValidate","$event","toHour","meridianTime","format","endDate","reFormatInput","changeMeridianTime","newMeridian","isStartOrEnd","hours","concatValueInput","concatValue","isValid","join","selected","toDate","generateAllGrid","dateObjectCurrent","startOf","clone","forEach","a","makeGridCustom","year","month","dateOfTurn","hasOwnProperty","firstDayDate","lastDayDate","endOf","weekday","initEmptyCell","lastEmptyCell","daysInMonth","arrayLengths","getDimensions","i","obj","available","isToday","isAvailable","date","isActive","dateFromDayAndMonthAndYear","isSame","startDay","endDay","inRange","push","Object","defineProperty","_startDate","_endDate","ngAfterContentChecked","detectChanges","setOptions","makeHeader","navDate","startDay_1","day","d","showInitialValue","includeEndDate","endDay_1","applyRange","startDay_2","currentMonth","currentYear","maxDate","add","minDate","subtract","onInput","writeValue","registerOnChange","fn","registerOnTouched","setDisabledState","isDisabled","setAccess","canChangeNavMonth","changeNavMonth","clonedDate","canChangeNavMonthLogic","initialEmptyCells","lastEmptyCells","arrayLength","dateToCheck","dateFromNum","isAvailableLogic","referenceDate","selectDay","selectedDate","currDate","isSameOrBefore","isSameOrAfter","generateDate","resetActivity","generatedDate","resetRange","keys","isNaN","map","timeObject","includeTime","startMonthLength","endMonthLength","calendar","days","isBefore","isAfter","currentDate","isBetween","toggleCalendar","isOpen","openCalendar","closeCalendar","changeMode","clear","startTime","endTime","setTime","handleModeChange","setStartTime","time","setEndTime","handleTimeChange","replace","lastTwo","substr","length","toUpperCase","last","hasLastTwo","includes","isAm","startTimePicker","nativeElement","blur","endTimePicker","providers","provide","NG_VALUE_ACCESSOR","useExisting","forwardRef","multi","ChangeDetectorRef","ViewChild","OutSideDirective","elementRef","clickOutside","onClick","target","classElement","classList","Array","from","contains","Directive","ElementRef","HostListener","CheckInputDirective","el","inputElement","onKeyPress","event","tmpValue","integerOnly","onKeyUp","checkLength","preventDefault","toString","e","key","indexOf","keyCode","ctrlKey","NgModule","declarations","imports","CommonModule","FormsModule","exports"],"mappings":"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","sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NgxFunnyDatepickerService {\n\n  constructor() { }\n}\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport * as moment from 'moment';\n\n@Component({\n  selector: 'ngx-funny-datepicker-dummy',\n  template: `\n    Please use ngx-funny-datepicker\n  `,\n  styles: []\n})\nexport class NgxFunnyDatepickerComponent implements OnInit {\n  @Output() valueDate = new EventEmitter<any>();\n  @Input() isRange: boolean;\n  @Input() hasTime: boolean;\n  @Input() startDate: any = moment();\n  @Input() endDate: any;\n  @Input() minDate: any;\n  @Input() maxDate: any;\n  @Input() locale = 'en';\n  @Input() rangeLabel = 'Range';\n  @Input() timeLabel = 'Time';\n  @Input() clearLabel = 'Clear';\n  @Input() classInput: string;\n\n  constructor() {\n  }\n\n  ngOnInit() {\n  }\n\n  emitValue = (data) => this.valueDate.emit(data);\n\n}\n","import { AfterViewChecked, Renderer2, AfterViewInit } from '@angular/core';\nimport { ChangeDetectorRef } from '@angular/core';\nimport { AfterContentChecked } from '@angular/core';\nimport { Component, OnInit, Input, Output, EventEmitter, ViewChild, ElementRef, forwardRef } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport * as moment_ from 'moment';\n\nconst moment = moment_;\n\n@Component({\n  selector: 'ngx-funny-datepicker',\n  templateUrl: './datepicker.component.html',\n  styleUrls: ['./datepicker.component.css'],\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => DatepickerComponent),\n      multi: true\n    }\n  ]\n})\nexport class DatepickerComponent implements OnInit, ControlValueAccessor, AfterContentChecked {\n  @Input() value: any = '';\n  @ViewChild('startTimePicker') startTimePicker: ElementRef;\n  @ViewChild('endTimePicker') endTimePicker: ElementRef;\n  @Input() showInitialValue: boolean;\n  @Input() isRange: boolean;\n  @Input() hasTime: boolean;\n  // tslint:disable-next-line: variable-name\n  public _startDate: any;\n  get startDate(): any {\n    return this._startDate;\n\n  }\n  @Input()\n  set startDate(value: any) {\n    if (this._startDate === value) {\n      return;\n    }\n    this._startDate = moment(value);\n    if (this._startDate.isValid()) {\n      this.startDateChange.emit(this._startDate);\n      this.reFormatInput();\n    }\n  }\n  @Output()\n  startDateChange = new EventEmitter<any>();\n\n  // tslint:disable-next-line: variable-name\n  public _endDate: any;\n  get endDate(): any {\n    return this._endDate;\n  }\n  @Input()\n  set endDate(value: any) {\n    if (this._endDate === value) {\n      return;\n    }\n    this._endDate = moment(value);\n    if (this._endDate.isValid()) {\n      this.endDateChange.emit(this._endDate);\n      this.reFormatInput();\n    }\n  }\n  @Output()\n  endDateChange = new EventEmitter<any>();\n  @Input() minDate: any;\n  @Input() maxDate: any;\n  @Input() classInput: string;\n  @Input() locale = 'en';\n  @Input() rangeLabel = 'Range';\n  @Input() timeLabel = 'Time';\n  @Input() clearLabel = 'Clear';\n  @Input() includeEndDate: boolean;\n  @Input() meridianTime: boolean;\n  @Input() formatInputDate = 'D MMM, YYYY';\n  @Input() formatInputTime = 'D MMM, YYYY HH:mm';\n  @Output() emitSelected = new EventEmitter<any>();\n  isOpen: boolean;\n  navDate: any;\n  weekDaysHeaderArr: Array<string> = [];\n  dataMonths: any = {};\n  selectedDate: any;\n  canAccessPrevious = true;\n  canAccessNext = true;\n  todayDate = moment().set({ hour: 0, minute: 0, second: 0, millisecond: 0 });\n  startDay: any;\n  endDay: any;\n  renderedFlag = true;\n  mode = 'end';\n  initialEmptyCells: number;\n  lastEmptyCells: number;\n  arrayLength: number;\n  currentMonth: number;\n  currentYear: number;\n  selected: any;\n  startTime: any;\n  endTime: any;\n  isInvalid = false;\n  includeTime: boolean;\n  minInputHour = 0;\n  maxInputHour = 23;\n  valueInputHour: any = {\n    start: {},\n    end: {}\n  };\n  minInputMinute = 0;\n  maxInputMinute = 59;\n  valueInputMinute: any = {\n    start: {},\n    end: {}\n  };\n  /**\n   * ControlAccessor\n   */\n  onTouched: boolean;\n  isDisabled: boolean;\n  onChange = (_: any) => {\n  };\n  onTouch = () => {\n    this.onTouched = true;\n  };\n\n  constructor(private cdr: ChangeDetectorRef) {\n\n\n  }\n  ngAfterContentChecked(): void {\n    this.cdr.detectChanges()\n  }\n  ngOnInit() {\n    this.setOptions();\n    this.makeHeader();\n    /**\n     * Set startDate and parse\n     */\n    this.navDate = moment();\n    this.valueInputHour.start = this.navDate.format('hh');\n    this.valueInputMinute.start = this.navDate.format('mm');\n\n    this.valueInputMinute.end = this.navDate.format('mm');\n    this.valueInputHour.end = this.navDate.format('hh');\n\n    if (this.startDate && moment(this.startDate).isValid()) {\n      this.startDate = moment(this.startDate);\n      this.navDate = this.startDate;\n      this.valueInputHour.start = this.startDate.format('hh');\n      this.valueInputMinute.start = this.startDate.format('mm');\n      const startDay = {\n        month: Number(this.startDate.format('M')),\n        year: this.startDate.year(),\n        day: Number(this.startDate.format('DD'))\n      };\n      this.dataMonths[startDay.year][startDay.month].forEach(d => d.isActive = (d.value === startDay.day));\n    } else {\n      if (this.showInitialValue) {\n        this.startDate = moment();\n      }\n    }\n\n    /**\n     * Set endDate and parse\n     */\n\n    if (this.endDate && moment(this.endDate).isValid()) {\n      this.endDate = moment(this.endDate);\n      this.navDate = this.endDate;\n      this.valueInputMinute.end = this.endDate.format('mm');\n      this.valueInputHour.end = this.endDate.format('hh');\n      this.includeEndDate = true;\n      const endDay = {\n        month: Number(this.endDate.format('M')),\n        year: this.endDate.year(),\n        day: Number(this.endDate.format('DD'))\n      };\n\n      this.applyRange();\n      const startDay = {\n        month: Number(this.startDate.format('M')),\n        year: this.startDate.year(),\n        day: Number(this.startDate.format('DD'))\n      };\n      this.dataMonths[startDay.year][startDay.month].forEach(d => d.isActive = (d.value === startDay.day));\n      this.dataMonths[endDay.year][endDay.month].forEach(d => {\n        if (!d.isActive) {\n          d.isActive = (d.value === endDay.day);\n        }\n      });\n    } else {\n      this.endDate = null;\n    }\n\n    this.currentMonth = this.navDate.month();\n    this.currentYear = this.navDate.year();\n    if (!this.maxDate) {\n      this.maxDate = this.navDate.clone().endOf('year').add(1, 'year');\n    }\n    if (!this.minDate) {\n      this.minDate = this.navDate.clone().startOf('year').subtract(1, 'year');\n    }\n    // this.applyRange()\n    if (this.showInitialValue) {\n      this.concatValueInput();\n    }\n\n  }\n\n  /**\n   *\n   * controlValueAccessor\n   */\n  onInput(value) {\n    this.value = value;\n    this.onTouch();\n    this.onChange(this.value);\n  }\n\n  writeValue(value: any): void {\n    if (value) {\n      this.value = value || '';\n    } else {\n      this.value = '';\n    }\n  }\n\n  registerOnChange(fn: any): void {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    this.onTouch = fn;\n  }\n\n  setDisabledState(isDisabled: boolean): void {\n    this.isDisabled = isDisabled;\n  }\n\n  /**\n   *\n   * @param num\n   * @param mode\n   */\n  addOrSubHour = (num: number, mode: string) => {\n    if (num > 0) {\n      this.checkHourValidate((Number(this.valueInputHour[mode]) + 1), mode);\n    } else {\n      this.checkHourValidate((Number(this.valueInputHour[mode]) - 1), mode);\n    }\n  };\n\n  addOrSubMinute = (num: number, mode: string) => {\n    if (num > 0) {\n      this.checkMinuteValidate((Number(this.valueInputMinute[mode]) + 1), mode);\n    } else {\n      this.checkMinuteValidate((Number(this.valueInputMinute[mode]) - 1), mode);\n    }\n  };\n\n  checkHourValidate = ($event, mode) => {\n    const toHour = (mode === 'start') ? 'start' : 'end';\n    if (this.meridianTime) {\n      this.valueInputHour[toHour] = $event;\n      if ($event <= 12 && $event > 0) {\n        if (mode === 'start' && this.startDate && this.startDate.format('A') === 'PM') {\n          if ($event === 12) {\n            this.startDate.set({ hour: ($event), minute: this.valueInputMinute[toHour], second: 0, millisecond: 0 });\n          } else {\n            this.startDate.set({ hour: ($event + 12), minute: this.valueInputMinute[toHour], second: 0, millisecond: 0 });\n          }\n        }\n        if (mode === 'start' && this.startDate && this.startDate.format('A') === 'AM') {\n          this.startDate.set({ hour: ($event), minute: this.valueInputMinute[toHour], second: 0, millisecond: 0 });\n        }\n\n        if (mode === 'end' && this.endDate && this.endDate.format('A') === 'PM') {\n          if ($event === 12) {\n            this.endDate.set({ hour: ($event), minute: this.valueInputMinute[toHour], second: 0, millisecond: 0 });\n          } else {\n            this.endDate.set({ hour: ($event + 12), minute: this.valueInputMinute[toHour], second: 0, millisecond: 0 });\n          }\n        }\n        if (mode === 'end' && this.endDate && this.endDate.format('A') === 'AM') {\n          this.endDate.set({ hour: ($event), minute: this.valueInputMinute[toHour], second: 0, millisecond: 0 });\n        }\n        if (mode === 'start' && this.endDate && this.endDate.format('A') === 'PM') {\n          this.startDate.set({ hour: this.valueInputHour[toHour] + 12, minute: this.valueInputMinute[toHour], second: 0, millisecond: 0 });\n        }\n      }\n    } else {\n      if ($event >= 0 && $event <= 23) {\n        this.valueInputHour[toHour] = $event;\n        if (mode === 'end') {\n          this.endDate.set({ hour: ($event), minute: this.valueInputMinute[toHour], second: 0, millisecond: 0 });\n        }\n        if (mode === 'start') {\n          this.startDate.set({ hour: this.valueInputHour[toHour], minute: this.valueInputMinute[toHour], second: 0, millisecond: 0 });\n        }\n      }\n    }\n\n    this.reFormatInput();\n  };\n\n  checkMinuteValidate = ($event, mode: string) => {\n    const toHour = (mode === 'start') ? 'start' : 'end';\n    this.valueInputMinute[toHour] = $event;\n    if ($event < 0) {\n      this.valueInputMinute[toHour] = 59;\n    } else if ($event > 59) {\n      this.valueInputMinute[toHour] = 0;\n    }\n    if (mode === 'start') {\n      this.startDate.set({ minute: this.valueInputMinute[toHour], second: 0, millisecond: 0 });\n    }\n    if (mode === 'end') {\n      this.endDate.set({ minute: this.valueInputMinute[toHour], second: 0, millisecond: 0 });\n    }\n    this.reFormatInput();\n  };\n\n  changeMeridianTime = (newMeridian, mode) => {\n    const isStartOrEnd = (mode === 'start') ? 'startDate' : 'endDate';\n    if (newMeridian === 'AM' && this[isStartOrEnd].hours() > 12) {\n      this[isStartOrEnd].hours(this[isStartOrEnd].hours() - 12);\n    } else if (newMeridian === 'PM' && this[isStartOrEnd].hours() <= 12) {\n      this[isStartOrEnd].hours(this[isStartOrEnd].hours() + 12);\n    } else if (newMeridian === 'AM' && this.startDate.hours() <= 12) {\n      this[isStartOrEnd].hours(this[isStartOrEnd].hours() - 1);\n    }\n    if (mode === 'start') {\n      this.valueInputHour[mode] = this[isStartOrEnd].hours(this[isStartOrEnd].hours()).format('hh');\n    }\n    if (mode === 'end') {\n      this.valueInputHour[mode] = this[isStartOrEnd].hours(this[isStartOrEnd].hours()).format('hh');\n    }\n    this.reFormatInput();\n  };\n\n  setOptions() {\n    moment.locale(this.locale);\n    this.generateAllGrid();\n    this.formatInputTime = (this.meridianTime) ? `D MMM, YYYY hh:mm A` : `D MMM, YYYY HH:mm`;\n    // this.includeEndDate = false;\n    // this.includeTime = false;\n  }\n\n  /**\n   * Concat values date to string format for show in input\n   */\n  concatValueInput = () => {\n    const concatValue = [\n      this.startDate.format(this.formatInputDate),\n      (this.endDate && this.endDate.isValid()) ? '  -  ' : '',\n      (this.endDate && this.endDate.isValid()) ? this.endDate.format(this.formatInputDate) : ''\n    ];\n    this.value = concatValue.join('');\n    this.isInvalid = !(this.value.length);\n    this.selected = {\n      startDate: (this.startDate && this.startDate.isValid()) ? this.startDate.toDate() : null,\n      endDate: (this.endDate && this.endDate.isValid()) ? this.endDate.toDate() : null\n    };\n  };\n\n  setAccess() {\n    this.canAccessPrevious = this.canChangeNavMonth(-1);\n    this.canAccessNext = this.canChangeNavMonth(1);\n  }\n\n  changeNavMonth(num: number, mode = 'next') {\n    if (this.canChangeNavMonth(num)) {\n      this.navDate.add(num, 'month');\n      this.currentMonth = this.navDate.month() + 1;\n      this.currentYear = this.navDate.year();\n      this.makeGridCustom(this.currentYear, this.currentMonth);\n    }\n  }\n\n  generateAllGrid = () => {\n    const dateObjectCurrent = moment().startOf('year').clone();\n    [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12].forEach(a => {\n      this.makeGridCustom(dateObjectCurrent.year(), a);\n    });\n\n  };\n\n  canChangeNavMonth(num: number) {\n    const clonedDate = moment(this.navDate);\n    return this.canChangeNavMonthLogic(num, clonedDate);\n  }\n\n  makeHeader() {\n    const weekDaysArr: Array<number> = [0, 1, 2, 3, 4, 5, 6];\n    weekDaysArr.forEach(day => this.weekDaysHeaderArr.push(moment().weekday(day).format('ddd')));\n  }\n\n  getDimensions(date: any) {\n    const firstDayDate = moment(date).startOf('month');\n    this.initialEmptyCells = firstDayDate.weekday();\n    const lastDayDate = moment(date).endOf('month');\n    this.lastEmptyCells = 6 - lastDayDate.weekday();\n    this.arrayLength = this.initialEmptyCells + this.lastEmptyCells + date.daysInMonth();\n  }\n\n  makeGridCustom = (year = null, month = null) => {\n    /**\n     * Fix\n     */\n\n    const dateOfTurn = moment(`${year}-${month}-01`, 'YYYY-M-DD');\n\n    /**\n     * Is OK\n     */\n    if (!this.dataMonths.hasOwnProperty(year)) {\n      this.dataMonths[year] = {};\n    }\n\n    /**\n     * Is OK\n     */\n    if (!this.dataMonths[year].hasOwnProperty(month)) {\n      this.dataMonths[year][month] = [];\n\n      /**\n       * Fix\n       */\n\n      const firstDayDate = moment(dateOfTurn).startOf('month');\n      const lastDayDate = moment(dateOfTurn).endOf('month');\n      this.dataMonths[year][`initialEmptyCells${month}`] = firstDayDate.weekday();\n      this.dataMonths[year][`lastEmptyCells${month}`] = 6 - lastDayDate.weekday();\n\n      const initEmptyCell = this.dataMonths[year][`initialEmptyCells${month}`];\n      const lastEmptyCell = this.dataMonths[year][`lastEmptyCells${month}`];\n\n      this.dataMonths[year][`arrayLength${month}`] = initEmptyCell + lastEmptyCell + dateOfTurn.daysInMonth();\n\n      const arrayLengths = this.dataMonths[year][`arrayLength${month}`];\n\n      this.getDimensions(dateOfTurn);\n      for (let i = 0; i < arrayLengths; i++) {\n        const obj: any = {};\n        if (i < initEmptyCell || i > initEmptyCell + dateOfTurn.daysInMonth() - 1) {\n          obj.value = 0;\n          obj.available = false;\n          obj.isToday = false;\n        } else {\n          obj.value = i - initEmptyCell + 1;\n          obj.available = this.isAvailable(i - initEmptyCell + 1);\n          obj.isToday = this.isToday(i - initEmptyCell + 1, month, year);\n          obj.month = month;\n          obj.date = dateOfTurn;\n          obj.year = year;\n          obj.isActive = false;\n          if (this.dateFromDayAndMonthAndYear(obj.value, month, year).isSame(this.startDate)) {\n            this.startDay = obj;\n          }\n          if (this.dateFromDayAndMonthAndYear(obj.value, month, year).isSame(this.endDate)) {\n            this.endDay = obj;\n          }\n          if (obj.isToday && !this.startDay && !this.endDay) {\n            this.startDay = obj;\n            this.endDay = obj;\n            obj.isActive = true;\n          }\n        }\n        obj.inRange = false;\n        this.dataMonths[year][month].push(obj);\n      }\n    }\n  };\n\n  isAvailable(num: number): boolean {\n    const dateToCheck = this.dateFromNum(num, this.navDate);\n    return this.isAvailableLogic(dateToCheck);\n  }\n\n  isToday(num: number, month: number, year: number): boolean {\n    const dateToCheck = moment(this.dateFromDayAndMonthAndYear(num, month, year));\n    return dateToCheck.isSame(moment().set({ hour: 0, minute: 0, second: 0, millisecond: 0 }));\n  }\n\n  dateFromNum(num: number, referenceDate: any): any {\n    const returnDate = moment(referenceDate);\n    return returnDate.date(num);\n  }\n\n  reFormatInput = () => {\n    this.formatInputDate = (this.includeTime) ? this.formatInputTime : this.formatInputDate;\n    this.concatValueInput();\n  };\n\n  selectDay(day: any) {\n    if (day.available) {\n      this.selectedDate = this.dateFromDayAndMonthAndYear(day.value, day.month, day.year);\n      if (this.includeEndDate) {\n        const currDate = this.dateFromDayAndMonthAndYear(day.value, day.month, day.year);\n        switch (this.mode) {\n          case 'end':\n            if (currDate.isSame(moment(this.startDate).startOf('day'))) {\n              this.mode = 'start';\n            } else if (currDate.isSameOrBefore(this.startDate)) {\n              this.endDay = this.startDay;\n              this.startDay = day;\n              this.mode = 'start';\n            } else {\n              this.endDay = day;\n            }\n            break;\n          case 'start':\n            if (currDate.isSame(moment(this.endDate).startOf('day'))) {\n              this.mode = 'end';\n            } else if (currDate.isSameOrAfter(this.endDate)) {\n              this.startDay = this.endDay;\n              this.endDay = day;\n              this.mode = 'end';\n            } else {\n              this.startDay = day;\n            }\n            break;\n        }\n\n        this.startDate = this.generateDate(this.startDay, this.startDate);\n        this.endDate = this.generateDate(this.endDay, this.endDate);\n        this.applyRange();\n        this.startDay.isActive = true;\n        this.endDay.isActive = true;\n        this.selected = {\n          startDate: this.startDate.toDate(),\n          endDate: this.endDate.toDate()\n        };\n      } else {\n        this.resetActivity();\n\n        this.startDate = this.selectedDate;\n        this.startDay = day;\n        this.startDay.isActive = true;\n        this.selected = {\n          startDate: this.startDate.toDate(),\n          endDate: null\n        };\n        this.emitSelected.emit(this.selected);\n      }\n      if (this.startDate && this.endDate) {\n        this.emitSelected.emit(this.selected);\n      }\n      this.reFormatInput();\n    }\n  }\n\n  generateDate(day: any, date: any) {\n    let generatedDate = this.dateFromDayAndMonthAndYear(day.value, day.month, day.year);\n    if (date) {\n      generatedDate = generatedDate.set({ hour: date.hour(), minute: date.minute() });\n    }\n    return generatedDate;\n  }\n\n  resetRange() {\n    Object.keys(this.dataMonths).forEach(year => {\n      Object.keys(this.dataMonths[year]).forEach(month => {\n        if (!isNaN(Number(month))) {\n          this.dataMonths[year][month].map(day => {\n            day.inRange = false;\n            day.isActive = false;\n          });\n        }\n\n      });\n    });\n  }\n\n  resetActivity() {\n    Object.keys(this.dataMonths).forEach(year => {\n      Object.keys(this.dataMonths[year]).forEach(month => {\n        if (!isNaN(Number(month))) {\n          this.dataMonths[year][month].map(day => {\n            day.isActive = false;\n          });\n        }\n      });\n    });\n  }\n\n  dateFromDayAndMonthAndYear(day, month, year) {\n    let timeObject = { hour: 0, minute: 0, second: 0, millisecond: 0 };\n    if (this.includeTime) {\n      timeObject = { hour: this.startDate.hour(), minute: this.startDate.minute(), second: 0, millisecond: 0 };\n      this.startDate.format('h:mm A');\n    }\n    return moment(`${year}-${month}-${day}`, 'YYYY-M-DD').set(timeObject);\n  }\n\n  applyRange() {\n    this.getDimensions(this.startDate);\n    const start = this.initialEmptyCells + this.startDay.value - 1;\n    const startMonthLength = this.arrayLength;\n    this.getDimensions(this.endDate);\n    const endMonthLength = this.arrayLength;\n    const end = this.initialEmptyCells + this.endDay.value - 1;\n    this.resetRange();\n    if (this.startDay.month !== this.endDay.month || this.startDay.year !== this.endDay.year) {\n      Object.keys(this.dataMonths).forEach(year => {\n        const calendar = this.dataMonths[year];\n        Object.keys(calendar).forEach(month => {\n          if (!isNaN(Number(month))) {\n            const days = this.dataMonths[year][month];\n            if (Number(month) === Number(this.startDay.month) && Number(year) === Number(this.startDay.year)) {\n              for (let i = 0; i < start; i++) {\n                days[i].inRange = false;\n              }\n              for (let i = start; i < startMonthLength; i++) {\n                days[i].inRange = true;\n              }\n            } else if (Number(month) === Number(this.endDay.month) && Number(year) === Number(this.endDay.year)) {\n              for (let i = 0; i <= end; i++) {\n                days[i].inRange = true;\n              }\n              for (let i = end + 1; i < endMonthLength; i++) {\n                days[i].inRange = false;\n              }\n            } else if ((month > this.startDay.month || year > this.startDay.year)\n              && (month < this.endDay.month || year < this.endDay.year)) {\n              days.forEach(day => day.inRange = true);\n            }\n          }\n        });\n      });\n    } else {\n      const month = this.startDay.month;\n      const year = this.startDay.year;\n      for (let i = 0; i < start; i++) {\n        this.dataMonths[year][month][i].inRange = false;\n      }\n      for (let i = start; i <= end; i++) {\n        this.dataMonths[year][month][i].inRange = true;\n      }\n      for (let i = end + 1; i < this.arrayLength; i++) {\n        this.dataMonths[year][month][i].inRange = false;\n      }\n    }\n  }\n\n  isAvailableLogic(dateToCheck: any) {\n    if (this.minDate || this.maxDate) {\n      return !(dateToCheck.isBefore(this.minDate) || dateToCheck.isAfter(this.maxDate));\n    } else {\n      return !dateToCheck.isBefore(moment(), 'day');\n    }\n  }\n\n  canChangeNavMonthLogic(num, currentDate) {\n    currentDate.add(num, 'month');\n    const minDate = this.minDate ? this.minDate : moment().add(-1, 'month');\n    const maxDate = this.maxDate ? this.maxDate : moment().add(1, 'year');\n    return currentDate.isBetween(minDate, maxDate);\n  }\n\n  toggleCalendar(): any {\n    this.isOpen = !this.isOpen;\n    this.reFormatInput();\n  }\n\n  openCalendar(): any {\n    this.isOpen = true;\n    this.onTouch();\n  }\n\n  closeCalendar(): any {\n    this.isOpen = false;\n    this.reFormatInput();\n    this.emitSelected.emit(this.selected);\n\n  }\n\n  changeMode(mode: string) {\n    this.mode = mode;\n    this.onTouch();\n  }\n\n  clear() {\n    this.resetRange();\n    this.startDate = moment();\n    this.endDate = null;\n    this.navDate = this.todayDate;\n    this.currentMonth = this.navDate.month();\n    this.currentYear = this.navDate.year();\n    this.includeEndDate = false;\n    this.includeTime = false;\n    this.startTime = null;\n    this.endTime = null;\n    this.mode = 'start';\n    this.makeGridCustom(this.currentYear, this.currentMonth);\n    this.reFormatInput();\n  }\n\n  setTime(moment, hour: number = 0, minute: number = 0) {\n    return moment.set({ hour, minute, second: 0, millisecond: 0 });\n  }\n\n  handleModeChange() {\n    this.resetRange();\n    this.mode = 'end';\n    if (this.startDay) {\n      this.startDay.isActive = true;\n    }\n    if (!this.includeEndDate) {\n      this.endDate = null;\n      this.mode = 'start';\n      this.startDay.isActive = false;\n      this.endDay.isActive = false;\n    } else {\n      const tmpStartDate = this.startDate.clone();\n      // const nextDay = tmpStartDate.add(2, 'days').format(`YYYY-${tmpStartDate.format('M') - 1}-D`);\n      // this.simulateClick(nextDay, 'calendar-day-not-range');\n    }\n\n  }\n\n  setStartTime(time) {\n    this.startTime = time;\n  }\n\n  setEndTime(time) {\n    this.endTime = time;\n  }\n\n  handleTimeChange(time: any, moment: any, mode: string) {\n    this.reFormatInput();\n    if (!time) {\n      return;\n    }\n    time = time.replace(/[^a-zA-Z0-9]/g, '');\n    moment.set({ hour: 0, minute: 0, second: 0, millisecond: 0 });\n    let lastTwo = time.substr(time.length - 2).toUpperCase();\n    let last = time.substr(time.length - 1).toUpperCase();\n    const hasLastTwo = ['AM', 'PM'].includes(lastTwo);\n    const hasLast = ['A', 'P'].includes(last);\n    let isAm = true;\n    let isPm = false;\n    if (hasLast || hasLastTwo) {\n      isAm = last === 'A' || lastTwo === 'AM';\n      isPm = last === 'P' || lastTwo === 'PM';\n    }\n    time = time.replace(/[^0-9]/g, '');\n    lastTwo = time.substr(time.length - 2);\n    last = time.substr(time.length - 1);\n    time = time.substr(0, 4);\n    this.isInvalid = false;\n    switch (time.length) {\n      case 1:\n        moment\n          = isAm ? this.setTime(moment, Number(time)) :\n            this.setTime(moment, Number(time) + 12);\n        break;\n      case 2:\n        if (last >= 6) {\n          this.isInvalid = true;\n          break;\n        }\n        if (time === 12) {\n          moment\n            = isAm ? this.setTime(moment, 0) :\n              this.setTime(moment, 12);\n        } else if (time < 12) {\n          moment\n            = isAm ? this.setTime(moment, Number(time)) :\n              this.setTime(moment, Number(time) + 12);\n        } else {\n          moment\n            = isAm ? this.setTime(moment, Number(time[0]), Number(last)) :\n              this.setTime(moment, Number(time[0]) + 12, Number(last));\n        }\n        break;\n      case 3:\n        if (lastTwo >= 60) {\n          this.isInvalid = true;\n          break;\n        } else {\n          moment\n            = isAm ? this.setTime(moment, Number(time[0]), Number(lastTwo)) :\n              this.setTime(moment, Number(time[0]) + 12, Number(lastTwo));\n        }\n        break;\n      case 4:\n        if (lastTwo >= 60) {\n          this.isInvalid = true;\n          break;\n        }\n        moment = this.setTime(moment, Number(time.substr(0, 2)), Number(lastTwo));\n        break;\n      default:\n        this.isInvalid = true;\n        break;\n    }\n    this.emitSelected.emit(this.selected);\n    if (mode === 'start') {\n      this.startDate = moment;\n      this.startTimePicker.nativeElement.blur();\n    } else {\n      this.endDate = moment;\n      this.endTimePicker.nativeElement.blur();\n    }\n  }\n\n}\n","import {Directive, ElementRef, EventEmitter, HostListener, Output} from '@angular/core';\n\n@Directive({\n  selector: '[clickOutside]'\n})\nexport class OutSideDirective {\n\n  @Output() clickOutside = new EventEmitter<void>();\n\n  constructor(private elementRef: ElementRef) {\n  }\n\n  @HostListener('document:click', ['$event.target'])\n  public onClick(target) {\n    const classElement = target.classList || [];\n    if (!Array.from(classElement).includes('omit-trigger-outside')) {\n      const clickedInside = this.elementRef.nativeElement.contains(target);\n      if (!clickedInside) {\n        this.clickOutside.emit();\n      }\n    }\n\n  }\n}\n","import { Directive, ElementRef, HostListener, Input } from '@angular/core';\n\n@Directive({\n  selector: '[libCheckInput]'\n})\nexport class CheckInputDirective {\n  private tmpValue: any;\n  inputElement: ElementRef;\n\n  constructor(el: ElementRef) {\n    this.inputElement = el;\n  }\n\n  @HostListener('keypress', ['$event']) onKeyPress(event) {\n    this.tmpValue = (this.inputElement.nativeElement.value.length > 2) ? 1 : this.inputElement.nativeElement.value;\n    this.integerOnly(event);\n  }\n\n  @HostListener('keyup', ['$event']) onKeyUp(event) {\n    this.checkLength(event);\n  }\n\n  checkLength(event) {\n    const value = this.inputElement.nativeElement.value;\n    if (!isNaN(value)) {\n      if (value.toString().length > 2) {\n        this.inputElement.nativeElement.value = this.tmpValue\n        event.preventDefault();\n      }\n    } else {\n      event.preventDefault();\n    }\n  }\n\n  integerOnly(event) {\n\n\n    const e = event as KeyboardEvent;\n    if (e.key === 'Tab' || e.key === 'TAB') {\n      return;\n    }\n    if ([46, 8, 9, 27, 13, 110].indexOf(e.keyCode) !== -1 ||\n      // Allow: Ctrl+A\n      (e.keyCode === 65 && e.ctrlKey === true) ||\n      // Allow: Ctrl+C\n      (e.keyCode === 67 && e.ctrlKey === true) ||\n      // Allow: Ctrl+V\n      (e.keyCode === 86 && e.ctrlKey === true) ||\n      // Allow: Ctrl+X\n      (e.keyCode === 88 && e.ctrlKey === true)) {\n      // let it happen, don't do anything\n      return;\n    }\n    if (['1', '2', '3', '4', '5', '6', '7', '8', '9', '0'].indexOf(e.key) === -1) {\n      e.preventDefault();\n    }\n  }\n\n\n}\n","import { NgModule } from '@angular/core';\nimport { NgxFunnyDatepickerComponent } from './ngx-funny-datepicker.component';\nimport { DatepickerComponent } from './datepicker/datepicker.component';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { OutSideDirective } from './out-side.directive';\nimport { CheckInputDirective } from './check-input.directive';\n\n\n\n@NgModule({\n  declarations: [NgxFunnyDatepickerComponent, DatepickerComponent, OutSideDirective, CheckInputDirective],\n  imports: [\n    CommonModule,\n    FormsModule\n  ],\n  exports: [DatepickerComponent]\n})\nexport class NgxFunnyDatepickerModule { }\n"]}