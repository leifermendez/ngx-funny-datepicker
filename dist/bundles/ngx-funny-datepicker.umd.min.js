!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("@angular/core"),require("moment"),require("@angular/common"),require("@angular/forms")):"function"==typeof define&&define.amd?define("ngx-funny-datepicker",["exports","@angular/core","moment","@angular/common","@angular/forms"],t):t((e=e||self)["ngx-funny-datepicker"]={},e.ng.core,e.moment_,e.ng.common,e.ng.forms)}(this,(function(e,t,n,a,i){"use strict";var s=function(){function e(){}return e.decorators=[{type:t.Injectable,args:[{providedIn:"root"}]}],e.ctorParameters=function(){return[]},e.ngInjectableDef=t.ɵɵdefineInjectable({factory:function(){return new e},token:e,providedIn:"root"}),e}(),r=function(){function e(){var e=this;this.valueDate=new t.EventEmitter,this.isRange=!0,this.hasTime=!0,this.emitValue=function(t){return e.valueDate.emit(t)}}return e.prototype.ngOnInit=function(){},e.decorators=[{type:t.Component,args:[{selector:"ngx-funny-datepicker",template:'\n    <funny-datepicker-single\n      [isRange]="isRange"\n      [hasTime]="hasTime"\n      [startDate]="startDate"\n      [endDate]="endDate"\n      [maxDate]="maxDate"\n      [minDate]="minDate"\n      (emitSelected)="emitValue($event)"\n    ></funny-datepicker-single>\n\n  '}]}],e.ctorParameters=function(){return[]},e.propDecorators={valueDate:[{type:t.Output}]},e}();var d=n,o=function(){function e(){var e=this;this.startDate=d(),this.emitSelected=new t.EventEmitter,this.locale="en",this.weekDaysHeaderArr=[],this.gridArr={},this.canAccessPrevious=!0,this.canAccessNext=!0,this.todayDate=d().set({hour:0,minute:0,second:0,millisecond:0}),this.mode="end",this.isInvalid=!1,this.formatInputDate="D MMM, YYYY",this.concatValueInput=function(){var t=[e.startDate.format(e.formatInputDate),e.endDate?"  -  ":"",e.endDate?e.endDate.format(e.formatInputDate):""];e.inputValueOutput=t.join("")},this.reFormatInput=function(){e.concatValueInput(),e.formatInputDate=e.includeTime?"D MMM, YYYY h:mm A":"D MMM, YYYY"},this.simulateClick=function(e){try{setTimeout((function(){var t=document.querySelector(".calendar-day-not-range-"+e+" > button");t&&t.click()}),50)}catch(e){return null}}}return e.prototype.ngOnInit=function(){this.setOptions(),d.locale(this.locale),this.startDate||(this.startDate=d()),this.navDate=d(),this.makeHeader(),this.currentMonth=this.navDate.month(),this.currentYear=this.navDate.year(),this.makeGrid(this.currentYear,this.currentMonth),this.concatValueInput()},e.prototype.setOptions=function(){this.includeEndDate=!1,this.includeTime=!1},e.prototype.setAccess=function(){this.canAccessPrevious=this.canChangeNavMonth(-1),this.canAccessNext=this.canChangeNavMonth(1)},e.prototype.changeNavMonth=function(e){this.canChangeNavMonth(e)&&(this.navDate.add(e,"month"),this.currentMonth=this.navDate.month(),this.currentYear=this.navDate.year(),this.makeGrid(this.currentYear,this.currentMonth))},e.prototype.canChangeNavMonth=function(e){var t=d(this.navDate);return this.canChangeNavMonthLogic(e,t)},e.prototype.makeHeader=function(){var e=this;[0,1,2,3,4,5,6].forEach((function(t){return e.weekDaysHeaderArr.push(d().weekday(t).format("ddd"))}))},e.prototype.getDimensions=function(e){var t=d(e).startOf("month");this.initialEmptyCells=t.weekday();var n=d(e).endOf("month");this.lastEmptyCells=6-n.weekday(),this.arrayLength=this.initialEmptyCells+this.lastEmptyCells+e.daysInMonth()},e.prototype.makeGrid=function(e,t){if(this.gridArr.hasOwnProperty(e)||(this.gridArr[e]={}),!this.gridArr[e].hasOwnProperty(t)){this.gridArr[e][t]=[],this.getDimensions(this.navDate);for(var n=0;n<this.arrayLength;n++){var a={};n<this.initialEmptyCells||n>this.initialEmptyCells+this.navDate.daysInMonth()-1?(a.value=0,a.available=!1,a.isToday=!1):(a.value=n-this.initialEmptyCells+1,a.available=this.isAvailable(n-this.initialEmptyCells+1),a.isToday=this.isToday(n-this.initialEmptyCells+1,t,e),a.month=t,a.date=this.navDate,a.year=e,a.isActive=!1,this.dateFromDayAndMonthAndYear(a.value,t,e).isSame(this.startDate)&&(this.startDay=a),this.dateFromDayAndMonthAndYear(a.value,t,e).isSame(this.endDate)&&(this.endDay=a),!a.isToday||this.startDay||this.endDay||(this.startDay=a,this.endDay=a,a.isActive=!0)),a.inRange=!1,this.gridArr[e][t].push(a)}}this.setAccess()},e.prototype.isAvailable=function(e){var t=this.dateFromNum(e,this.navDate);return this.isAvailableLogic(t)},e.prototype.isToday=function(e,t,n){return d(this.dateFromDayAndMonthAndYear(e,t,n)).isSame(d().set({hour:0,minute:0,second:0,millisecond:0}))},e.prototype.dateFromNum=function(e,t){return d(t).date(e)},e.prototype.selectDay=function(e){if(e.available){if(this.selectedDate=this.dateFromDayAndMonthAndYear(e.value,e.month,e.year),this.includeEndDate){var t=this.dateFromDayAndMonthAndYear(e.value,e.month,e.year);switch(this.mode){case"end":t.isSame(d(this.startDate).startOf("day"))?this.mode="start":t.isSameOrBefore(this.startDate)?(this.endDay=this.startDay,this.startDay=e,this.mode="start"):this.endDay=e;break;case"start":t.isSame(d(this.endDate).startOf("day"))?this.mode="end":t.isSameOrAfter(this.endDate)?(this.startDay=this.endDay,this.endDay=e,this.mode="end"):this.startDay=e}this.startDate=this.generateDate(this.startDay,this.startDate),this.endDate=this.generateDate(this.endDay,this.endDate),this.applyRange(),this.startDay.isActive=!0,this.endDay.isActive=!0,this.selected={startDate:this.startDate,endDate:this.endDate}}else this.resetActivity(),this.startDate=this.selectedDate,this.startDay=e,this.startDay.isActive=!0,this.selected={startDate:this.startDate},this.emitSelected.emit(this.selected);this.startDate&&this.endDate&&this.emitSelected.emit(this.selected),this.reFormatInput()}},e.prototype.generateDate=function(e,t){var n=this.dateFromDayAndMonthAndYear(e.value,e.month,e.year);return t&&(n=n.set({hour:t.hour(),minute:t.minute()})),n},e.prototype.resetRange=function(){var e=this;Object.keys(this.gridArr).forEach((function(t){Object.keys(e.gridArr[t]).forEach((function(n){e.gridArr[t][n].map((function(e){e.inRange=!1,e.isActive=!1}))}))}))},e.prototype.resetActivity=function(){var e=this;Object.keys(this.gridArr).forEach((function(t){Object.keys(e.gridArr[t]).forEach((function(n){e.gridArr[t][n].map((function(e){e.isActive=!1}))}))}))},e.prototype.dateFromDayAndMonthAndYear=function(e,t,n){var a={hour:0,minute:0,second:0,millisecond:0};return this.includeTime&&(a={hour:this.startDate.hour(),minute:this.startDate.minute(),second:0,millisecond:0},this.startDate.format("h:mm A")),d([n,t,e]).set(a)},e.prototype.applyRange=function(){var e=this;this.getDimensions(this.startDate);var t=this.initialEmptyCells+this.startDay.value-1,n=this.arrayLength;this.getDimensions(this.endDate);var a=this.arrayLength,i=this.initialEmptyCells+this.endDay.value-1;if(this.resetRange(),this.startDay.month!==this.endDay.month||this.startDay.year!==this.endDay.year)Object.keys(this.gridArr).forEach((function(s){var r=e.gridArr[s];Object.keys(r).forEach((function(r){var d=e.gridArr[s][r];if(r==e.startDay.month&&s==e.startDay.year){for(var o=0;o<t;o++)d[o].inRange=!1;for(o=t;o<n;o++)d[o].inRange=!0}else if(r==e.endDay.month&&s==e.endDay.year){for(o=0;o<=i;o++)d[o].inRange=!0;for(o=i+1;o<a;o++)d[o].inRange=!1}else(r>e.startDay.month||s>e.startDay.year)&&(r<e.endDay.month||s<e.endDay.year)&&d.forEach((function(e){return e.inRange=!0}))}))}));else{for(var s=this.startDay.month,r=this.startDay.year,d=0;d<t;d++)this.gridArr[r][s][d].inRange=!1;for(d=t;d<=i;d++)this.gridArr[r][s][d].inRange=!0;for(d=i+1;d<this.arrayLength;d++)this.gridArr[r][s][d].inRange=!1}},e.prototype.isAvailableLogic=function(e){return this.minDate||this.maxDate?!(e.isBefore(this.minDate)||e.isAfter(this.maxDate)):!e.isBefore(d(),"day")},e.prototype.canChangeNavMonthLogic=function(e,t){t.add(e,"month");var n=this.minDate?this.minDate:d().add(-1,"month"),a=this.maxDate?this.maxDate:d().add(1,"year");return t.isBetween(n,a)},e.prototype.toggleCalendar=function(){this.isOpen=!this.isOpen},e.prototype.openCalendar=function(){this.isOpen=!0},e.prototype.closeCalendar=function(){this.isOpen=!1},e.prototype.changeMode=function(e){this.mode=e},e.prototype.clear=function(){this.resetRange(),this.startDate=d(),this.endDate=null,this.navDate=this.todayDate,this.currentMonth=this.navDate.month(),this.currentYear=this.navDate.year(),this.includeEndDate=!1,this.includeTime=!1,this.startTime=null,this.endTime=null,this.mode="start",this.makeGrid(this.currentYear,this.currentMonth)},e.prototype.setTime=function(e,t,n){return void 0===t&&(t=0),void 0===n&&(n=0),e.set({hour:t,minute:n,second:0,millisecond:0})},e.prototype.handleModeChange=function(){if(this.resetRange(),this.mode="end",this.startDay&&(this.startDay.isActive=!0),this.includeEndDate){var e=this.startDate.clone(),t=e.add(2,"days").format("YYYY-"+(e.format("M")-1)+"-D");this.simulateClick(t)}else this.endDate=null,this.mode="start",this.startDay.isActive=!1,this.endDay.isActive=!1},e.prototype.setStartTime=function(e){this.startTime=e},e.prototype.setEndTime=function(e){this.endTime=e},e.prototype.handleTimeChange=function(e,t,n){if(this.reFormatInput(),e){e=e.replace(/[^a-zA-Z0-9]/g,""),t.set({hour:0,minute:0,second:0,millisecond:0});var a=e.substr(e.length-2).toUpperCase(),i=e.substr(e.length-1).toUpperCase(),s=["AM","PM"].includes(a),r=!0;switch((["A","P"].includes(i)||s)&&(r="A"===i||"AM"===a,"P"===i||"PM"===a),a=(e=e.replace(/[^0-9]/g,"")).substr(e.length-2),i=e.substr(e.length-1),e=e.substr(0,4),this.isInvalid=!1,e.length){case 1:t=r?this.setTime(t,Number(e)):this.setTime(t,Number(e)+12);break;case 2:if(i>=6){this.isInvalid=!0;break}t=12===e?r?this.setTime(t,0):this.setTime(t,12):e<12?r?this.setTime(t,Number(e)):this.setTime(t,Number(e)+12):r?this.setTime(t,Number(e[0]),Number(i)):this.setTime(t,Number(e[0])+12,Number(i));break;case 3:if(a>=60){this.isInvalid=!0;break}t=r?this.setTime(t,Number(e[0]),Number(a)):this.setTime(t,Number(e[0])+12,Number(a));break;case 4:if(a>=60){this.isInvalid=!0;break}t=this.setTime(t,Number(e.substr(0,2)),Number(a));break;default:this.isInvalid=!0}"start"===n?(this.startDate=t,this.startTimePicker.nativeElement.blur()):(this.endDate=t,this.endTimePicker.nativeElement.blur())}},e.decorators=[{type:t.Component,args:[{selector:"funny-datepicker-single",template:'\x3c!-- ********* INPUT FROM DATE Collaborator https://github.com/leifermendez ***************** ---\x3e\n\n<input (click)="openCalendar()" readonly spellcheck="false" class="omit-trigger-outside input-date-funny"\n       autocomplete="nope"\n       [ngClass]="{\'bg-blue\': mode === \'start\' && includeEndDate, \'bg-red\': isInvalid, \'funny-range\':includeEndDate }"\n       type="text" [value]="inputValueOutput">\n\n\x3c!--- *************** CALENDAR ELEMENTS Author https://github.com/mokshithpyla ************* ---\x3e\n<div (clickOutside)="closeCalendar()" class="calendar" *ngIf="isOpen">\n  <div class="calendar-nav">\n    <div class="calendar-nav-previous-month">\n      <button class="button is-text" (click)="changeNavMonth(-1)" [disabled]="!canAccessPrevious">\n        <i class="fa fa-chevron-left"></i>\n      </button>\n    </div>\n    <div>{{navDate.format(\'MMMM YYYY\')}}</div>\n    <div class="calendar-nav-next-month">\n      <button class="button is-text" (click)="changeNavMonth(1)" [disabled]="!canAccessNext">\n        <i class="fa fa-chevron-right"></i>\n      </button>\n    </div>\n  </div>\n  <div class="calendar-container">\n    <div class="calendar-header">\n      <div class="calendar-date" *ngFor="let day of weekDaysHeaderArr">\n        {{day}}\n      </div>\n    </div>\n    <div class="calendar-body" *ngIf="includeEndDate; else notRange">\n      <ng-container *ngIf="gridArr">\n        <div *ngFor="let day of gridArr[currentYear][currentMonth]"\n             class="calendar-date calendar-day-not-range-{{currentYear}}-{{currentMonth}}-{{day?.value}}"\n             [ngClass]="{\n          \'is-disabled\': !day.available,\n          \'calendar-range\': day.inRange,\n          \'calendar-range-start\': day.value === startDay?.value &&  day.month === startDay?.month && day.year === startDay?.year ,\n          \'calendar-range-end\': day.value === endDay?.value && day.month === endDay?.month && day.year === endDay?.year}">\n          <button *ngIf="day.value !== 0" class="date-item"\n                  [ngClass]="{\'is-active\': day.isActive, \'is-today\': day.isToday}" (click)="selectDay(day)">\n            {{day.value}}</button>\n          <button *ngIf="day.value === 0" class="date-item"></button>\n        </div>\n      </ng-container>\n    </div>\n    <ng-template #notRange>\n      <div class="calendar-body">\n        <div *ngFor="let day of gridArr[currentYear][currentMonth]"\n             class="calendar-date calendar-day-range-{{currentYear}}-{{currentMonth}}-{{day?.value}}"\n             [ngClass]="{\'is-disabled\': !day.available }">\n          <button *ngIf="day.value !== 0" class="date-item"\n                  [ngClass]="{\'is-active\': day.isActive, \'is-today\': day.isToday}"\n                  (click)="selectDay(day)">{{day.value}}</button>\n          <button *ngIf="day.value === 0" class="date-item"></button>\n        </div>\n      </div>\n    </ng-template>\n    <div class="footer-calendar">\n      <div class="flex justify-content-between options-bar divider">\n        <div class="flex">\n          <div class="label-placeholder label-option pr-25">\n            <input type="checkbox" [(ngModel)]="includeEndDate" (change)="handleModeChange()">\n            <small>RANGO</small>\n          </div>\n          <div class="label-placeholder label-option pr-25">\n            <input\n              (change)="reFormatInput();handleTimeChange(startTime, startDate, \'start\');handleTimeChange(endTime, endDate, \'end\')"\n              [(ngModel)]="includeTime" type="checkbox">\n            <small>HORAS</small>\n          </div>\n        </div>\n        <div class="label-placeholder label-option pr-25">\n          <div (click)="clear()">Limpiar</div>\n        </div>\n      </div>\n      <div class="zone-preview-dates divider">\n        <div class="child">\n          <div class="calendar-child-day">{{startDate?.format(\'D\')}}</div>\n          <div>\n            <div class="calendar-child-month">{{startDate?.format(\'MMMM YYYY\')}}</div>\n            <div class="calendar-child-week">{{startDate?.format(\'dddd\')}}</div>\n          </div>\n        </div>\n        <div class="child">\n          <input #startTimePicker type="text" class="input-hour" autocomplete="nope" spellcheck="false"\n                 [ngModel]="startDate.format(\'h:mm A\')" *ngIf="startDate && includeTime"\n                 (ngModelChange)="setStartTime($event)" (blur)="handleTimeChange(startTime, startDate, \'start\')"\n                 (keyup.enter)="handleTimeChange(startTime, startDate, \'start\')">\n        </div>\n      </div>\n      <div class="zone-preview-dates divider" *ngIf="includeEndDate">\n        <div class="child">\n          <div class="calendar-child-day">{{endDate?.format(\'D\')}}</div>\n          <div>\n            <div class="calendar-child-month">{{endDate?.format(\'MMMM YYYY\')}}</div>\n            <div class="calendar-child-week">{{endDate?.format(\'dddd\')}}</div>\n          </div>\n        </div>\n        <div class="child">\n          <ng-container *ngIf="endDate">\n            <input #endTimePicker type="text" class="input-hour" autocomplete="nope" spellcheck="false"\n                   [ngModel]="endDate.format(\'h:mm A\')"\n                   (ngModelChange)="setEndTime($event)" *ngIf="isRange && includeTime"\n                   (blur)="handleTimeChange(endTime, endDate, \'end\')"\n                   (keyup.enter)="handleTimeChange(endTime, endDate, \'end\')">\n          </ng-container>\n        </div>\n      </div>\n      \x3c!--      --\x3e\n      \x3c!--      <div class="divider" *ngIf="hasTime">--\x3e\n      \x3c!--        <div class="label-placeholder">--\x3e\n      \x3c!--          <small>FROM</small>--\x3e\n      \x3c!--        </div>--\x3e\n      \x3c!--        <div class="justify-content-between flex pt-25">--\x3e\n      \x3c!--          <div class=" align-left">--\x3e\n      \x3c!--            <div *ngIf="includeTime" class=" align-right">--\x3e\n      \x3c!--              <div *ngIf="startDate">--\x3e\n      \x3c!--                <input #startTimePicker type="text" class="input-hour" autocomplete="nope" spellcheck="false"--\x3e\n      \x3c!--                       [ngModel]="startDate.format(\'h:mm A\')"--\x3e\n      \x3c!--                       (ngModelChange)="setStartTime($event)" (blur)="handleTimeChange(startTime, startDate, \'start\')"--\x3e\n      \x3c!--                       (keyup.enter)="handleTimeChange(startTime, startDate, \'start\')">--\x3e\n      \x3c!--              </div>--\x3e\n      \x3c!--              <div *ngIf="!startDate" class=" align-right">--\x3e\n      \x3c!--                &#45;&#45;--\x3e\n      \x3c!--              </div>--\x3e\n      \x3c!--            </div>--\x3e\n      \x3c!--          </div>--\x3e\n      \x3c!--          <div class=" align-right">--\x3e\n      \x3c!--            <label class="switch">--\x3e\n      \x3c!--              <input type="checkbox" (change)="reFormatInput()" [(ngModel)]="includeTime">--\x3e\n      \x3c!--              <span class="slider round"></span>--\x3e\n      \x3c!--            </label>--\x3e\n      \x3c!--          </div>--\x3e\n      \x3c!--        </div>--\x3e\n      \x3c!--      </div>--\x3e\n\n      \x3c!--      <div class="divider" *ngIf="isRange">--\x3e\n      \x3c!--        <div class="label-placeholder">--\x3e\n      \x3c!--          <small>TO</small>--\x3e\n      \x3c!--        </div>--\x3e\n      \x3c!--        <div class=" justify-content-between flex pt-25">--\x3e\n      \x3c!--          <div class=" align-left ">--\x3e\n      \x3c!--            <div *ngIf="includeTime" class=" align-right">--\x3e\n      \x3c!--              <div *ngIf="endDate">--\x3e\n      \x3c!--                <input #endTimePicker type="text" class="input-hour" autocomplete="nope" spellcheck="false"--\x3e\n      \x3c!--                       [ngModel]="endDate.format(\'h:mm A\')"--\x3e\n      \x3c!--                       (ngModelChange)="setEndTime($event)"--\x3e\n      \x3c!--                       (blur)="handleTimeChange(endTime, endDate, \'end\')"--\x3e\n      \x3c!--                       (keyup.enter)="handleTimeChange(endTime, endDate, \'end\')">--\x3e\n      \x3c!--              </div>--\x3e\n      \x3c!--              <div *ngIf="!endDate" class=" align-right">--\x3e\n      \x3c!--                &#45;&#45;--\x3e\n      \x3c!--              </div>--\x3e\n      \x3c!--            </div>--\x3e\n      \x3c!--          </div>--\x3e\n      \x3c!--          <div class=" align-right">--\x3e\n      \x3c!--            <label class="switch">--\x3e\n      \x3c!--              <input type="checkbox" [(ngModel)]="includeEndDate" (change)="handleModeChange()">--\x3e\n      \x3c!--              <span class="slider round"></span>--\x3e\n      \x3c!--            </label>--\x3e\n      \x3c!--          </div>--\x3e\n      \x3c!--        </div>--\x3e\n      \x3c!--      </div>--\x3e\n\n      \x3c!--      <div class="divider">--\x3e\n      \x3c!--        <button type="button" class="datetimepicker-footer-clear has-text-danger button is-small is-text"--\x3e\n      \x3c!--                (click)="clear()">Clear All--\x3e\n      \x3c!--        </button>--\x3e\n      \x3c!--      </div>--\x3e\n\n    </div>\n  </div>\n</div>\n',styles:['.datetimepicker-footer{display:flex;flex:1;justify-content:space-evenly;margin:0}.datetimepicker-selection-start{display:flex;align-items:center;border-radius:3px;background:rgba(242,241,238,.6);height:28px;line-height:1.2;padding-left:8px;padding-right:8px;flex-basis:50%;box-shadow:rgba(15,15,15,.1) 0 0 0 1px inset,rgba(15,15,15,.1) 0 1px 1px inset;flex-grow:1;font-size:14px}.bg-blue{background:rgba(46,170,220,.15)!important;box-shadow:#2eaadc 0 0 0 2px inset!important}.bg-red{background:rgba(235,87,87,.15)!important;box-shadow:#eb5757 0 0 0 2px inset}.switch{position:relative;display:inline-block;width:60px;height:34px}.switch input{opacity:0;width:0;height:0}.slider{position:absolute;cursor:pointer;top:0;left:0;right:0;bottom:0;background-color:#ccc;transition:.4s}.slider:before{position:absolute;content:"";height:26px;width:26px;left:4px;bottom:4px;background-color:#fff;transition:.4s}input:checked+.slider{background-color:#00d1b2}input:focus+.slider{box-shadow:0 0 1px #00d1b2}input:checked+.slider:before{transform:translateX(26px)}.slider.round{border-radius:34px}.slider.round:before{border-radius:50%}.pb10{padding-bottom:10px}.flex{display:flex}.w33p{width:33.33%}.align-right{text-align:right}.w56p{width:56.33%}.align-left{text-align:left}.pl10{padding-left:10px}']}]}],e.ctorParameters=function(){return[]},e.propDecorators={startTimePicker:[{type:t.ViewChild,args:["startTimePicker"]}],endTimePicker:[{type:t.ViewChild,args:["endTimePicker"]}],isRange:[{type:t.Input}],hasTime:[{type:t.Input}],startDate:[{type:t.Input}],endDate:[{type:t.Input}],minDate:[{type:t.Input}],maxDate:[{type:t.Input}],emitSelected:[{type:t.Output}]},e}();var c=function(){function e(e){this.elementRef=e,this.clickOutside=new t.EventEmitter}return e.prototype.onClick=function(e){var t=e.classList||[];Array.from(t).includes("omit-trigger-outside")||(this.elementRef.nativeElement.contains(e)||this.clickOutside.emit())},e.decorators=[{type:t.Directive,args:[{selector:"[clickOutside]"}]}],e.ctorParameters=function(){return[{type:t.ElementRef}]},e.propDecorators={clickOutside:[{type:t.Output}],onClick:[{type:t.HostListener,args:["document:click",["$event.target"]]}]},e}();var l=function(){function e(){}return e.decorators=[{type:t.NgModule,args:[{declarations:[r,o,c],imports:[a.CommonModule,i.FormsModule],exports:[r]}]}],e}();e.NgxFunnyDatepickerComponent=r,e.NgxFunnyDatepickerModule=l,e.NgxFunnyDatepickerService=s,e.ɵa=o,e.ɵb=c,Object.defineProperty(e,"__esModule",{value:!0})}));
//# sourceMappingURL=ngx-funny-datepicker.umd.min.js.map