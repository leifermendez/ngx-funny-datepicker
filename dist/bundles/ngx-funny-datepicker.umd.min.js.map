{"version":3,"sources":["../../src/lib/ngx-funny-datepicker.service.ts","../../src/lib/ngx-funny-datepicker.component.ts","../../src/lib/datepicker/datepicker.component.ts","../../src/lib/out-side.directive.ts","../../src/lib/check-input.directive.ts","../../src/lib/ngx-funny-datepicker.module.ts"],"names":["Injectable","args","providedIn","NgxFunnyDatepickerComponent","_this","this","valueDate","EventEmitter","startDate","moment","locale","rangeLabel","timeLabel","clearLabel","emitValue","data","emit","prototype","ngOnInit","Component","selector","template","Output","Input","moment_","DatepickerComponent","cdr","value","startDateChange","endDateChange","formatInputDate","formatInputTime","emitSelected","weekDaysHeaderArr","dataMonths","canAccessPrevious","canAccessNext","todayDate","set","hour","minute","second","millisecond","renderedFlag","mode","isInvalid","minInputHour","maxInputHour","valueInputHour","start","end","minInputMinute","maxInputMinute","valueInputMinute","onChange","_","onTouch","onTouched","addOrSubHour","num","checkHourValidate","Number","addOrSubMinute","checkMinuteValidate","$event","toHour","meridianTime","format","endDate","reFormatInput","changeMeridianTime","newMeridian","isStartOrEnd","hours","concatValueInput","concatValue","isValid","join","selected","toDate","generateAllGrid","dateObjectCurrent","startOf","clone","forEach","a","makeGridCustom","year","month","dateOfTurn","hasOwnProperty","firstDayDate","lastDayDate","endOf","weekday","initEmptyCell","lastEmptyCell","daysInMonth","arrayLengths","getDimensions","i","obj","available","isToday","isAvailable","date","isActive","dateFromDayAndMonthAndYear","isSame","startDay","endDay","inRange","push","Object","defineProperty","startDatePrivate","endDatePrivate","ngAfterContentChecked","detectChanges","navDate","setOptions","makeHeader","startDay_1","day","d","showInitialValue","includeEndDate","endDay_1","applyRange","startDay_2","currentMonth","currentYear","onInput","writeValue","registerOnChange","fn","registerOnTouched","setDisabledState","isDisabled","setAccess","canChangeNavMonth","changeNavMonth","add","clonedDate","canChangeNavMonthLogic","initialEmptyCells","lastEmptyCells","arrayLength","dateToCheck","dateFromNum","isAvailableLogic","referenceDate","selectDay","selectedDate","currDate","isSameOrBefore","isSameOrAfter","generateDate","resetActivity","generatedDate","resetRange","keys","isNaN","map","timeObject","includeTime","startMonthLength","endMonthLength","calendar","days","minDate","maxDate","isBefore","isAfter","currentDate","isBetween","toggleCalendar","isOpen","openCalendar","closeCalendar","changeMode","clear","startTime","endTime","setTime","handleModeChange","setStartTime","time","setEndTime","handleTimeChange","replace","lastTwo","substr","length","toUpperCase","last","hasLastTwo","includes","isAm","startTimePicker","nativeElement","blur","endTimePicker","providers","provide","NG_VALUE_ACCESSOR","useExisting","forwardRef","multi","ChangeDetectorRef","ViewChild","OutSideDirective","elementRef","clickOutside","onClick","target","classElement","classList","Array","from","contains","Directive","ElementRef","HostListener","CheckInputDirective","el","inputElement","onKeyPress","event","tmpValue","integerOnly","onKeyUp","checkLength","preventDefault","toString","e","key","indexOf","keyCode","ctrlKey","NgModule","declarations","imports","CommonModule","FormsModule","exports"],"mappings":"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","sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NgxFunnyDatepickerService {\n\n  constructor() { }\n}\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport * as moment from 'moment';\n\n@Component({\n  selector: 'ngx-funny-datepicker-dummy',\n  template: `\n    Please use ngx-funny-datepicker\n  `,\n  styles: []\n})\nexport class NgxFunnyDatepickerComponent implements OnInit {\n  @Output() valueDate = new EventEmitter<any>();\n  @Input() isRange: boolean;\n  @Input() hasTime: boolean;\n  @Input() startDate: any = moment();\n  @Input() endDate: any;\n  @Input() minDate: any;\n  @Input() maxDate: any;\n  @Input() locale = 'en';\n  @Input() rangeLabel = 'Range';\n  @Input() timeLabel = 'Time';\n  @Input() clearLabel = 'Clear';\n  @Input() classInput: string;\n\n  constructor() {\n  }\n\n  ngOnInit() {\n  }\n\n  emitValue = (data) => this.valueDate.emit(data);\n\n}\n","import {ChangeDetectorRef} from '@angular/core';\nimport {AfterContentChecked} from '@angular/core';\nimport {Component, OnInit, Input, Output, EventEmitter, ViewChild, ElementRef, forwardRef} from '@angular/core';\nimport {ControlValueAccessor, NG_VALUE_ACCESSOR} from '@angular/forms';\nimport * as moment_ from 'moment';\n\nconst moment = moment_;\n\n@Component({\n  selector: 'ngx-funny-datepicker',\n  templateUrl: './datepicker.component.html',\n  styleUrls: ['./datepicker.component.css'],\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => DatepickerComponent),\n      multi: true\n    }\n  ]\n})\nexport class DatepickerComponent implements OnInit, ControlValueAccessor, AfterContentChecked {\n  @Input() value: any = '';\n  @ViewChild('startTimePicker') startTimePicker: ElementRef;\n  @ViewChild('endTimePicker') endTimePicker: ElementRef;\n  @Input() showInitialValue: boolean;\n  @Input() isRange: boolean;\n  @Input() hasTime: boolean;\n  public startDatePrivate: any;\n\n  get startDate(): any {\n    return this.startDatePrivate;\n  }\n\n  @Input()\n  set startDate(value: any) {\n    if (this.startDatePrivate === value) {\n      return;\n    }\n    this.startDatePrivate = moment(value);\n    if (this.startDatePrivate.isValid()) {\n      this.startDateChange.emit(this.startDatePrivate);\n      this.reFormatInput();\n    }\n  }\n\n  @Output()\n  startDateChange = new EventEmitter<any>();\n\n  public endDatePrivate: any;\n\n  get endDate(): any {\n    return this.endDatePrivate;\n  }\n\n  @Input()\n  set endDate(value: any) {\n    if (this.endDatePrivate === value) {\n      return;\n    }\n    this.endDatePrivate = moment(value);\n    if (this.endDatePrivate.isValid()) {\n      this.endDateChange.emit(this.endDatePrivate);\n      this.reFormatInput();\n    }\n  }\n\n  @Output()\n  endDateChange = new EventEmitter<any>();\n  @Input() minDate: any;\n  @Input() maxDate: any;\n  @Input() classInput: string;\n  @Input() locale = 'en';\n  @Input() rangeLabel = 'Range';\n  @Input() timeLabel = 'Time';\n  @Input() clearLabel = 'Clear';\n  @Input() includeEndDate: boolean;\n  @Input() meridianTime: boolean;\n  @Input() formatInputDate = 'D MMM, YYYY';\n  @Input() formatInputTime = 'D MMM, YYYY HH:mm';\n  @Output() emitSelected = new EventEmitter<any>();\n  isOpen: boolean;\n  navDate: any;\n  weekDaysHeaderArr: Array<string> = [];\n  dataMonths: any = {};\n  selectedDate: any;\n  canAccessPrevious = true;\n  canAccessNext = true;\n  todayDate = moment().set({hour: 0, minute: 0, second: 0, millisecond: 0});\n  startDay: any;\n  endDay: any;\n  renderedFlag = true;\n  mode = 'end';\n  initialEmptyCells: number;\n  lastEmptyCells: number;\n  arrayLength: number;\n  currentMonth: number;\n  currentYear: number;\n  selected: any;\n  startTime: any;\n  endTime: any;\n  isInvalid = false;\n  includeTime: boolean;\n  minInputHour = 0;\n  maxInputHour = 23;\n  valueInputHour: any = {\n    start: {},\n    end: {}\n  };\n  minInputMinute = 0;\n  maxInputMinute = 59;\n  valueInputMinute: any = {\n    start: {},\n    end: {}\n  };\n  /**\n   * ControlAccessor\n   */\n  onTouched: boolean;\n  isDisabled: boolean;\n  onChange = (_: any) => {\n  };\n  onTouch = () => {\n    this.onTouched = true;\n  };\n\n  constructor(private cdr: ChangeDetectorRef) {\n\n\n  }\n\n  ngAfterContentChecked(): void {\n    this.cdr.detectChanges();\n  }\n\n  ngOnInit() {\n    this.navDate = moment();\n    this.setOptions();\n    this.makeHeader();\n    /**\n     * Set startDate and parse\n     */\n\n    this.valueInputHour.start = this.navDate.format('hh');\n    this.valueInputMinute.start = this.navDate.format('mm');\n\n    this.valueInputMinute.end = this.navDate.format('mm');\n    this.valueInputHour.end = this.navDate.format('hh');\n    if (this.startDate && moment(this.startDate).isValid()) {\n      this.startDate = moment(this.startDate);\n      this.navDate = this.startDate;\n      this.valueInputHour.start = this.startDate.format('hh');\n      this.valueInputMinute.start = this.startDate.format('mm');\n      const startDay = {\n        month: Number(this.startDate.format('M')),\n        year: this.startDate.year(),\n        day: Number(this.startDate.format('DD'))\n      };\n      this.dataMonths[startDay.year][startDay.month].forEach(d => d.isActive = (d.value === startDay.day));\n    } else {\n      if (this.showInitialValue) {\n        this.startDate = moment();\n      }\n    }\n\n    /**\n     * Set endDate and parse\n     */\n\n    if (this.endDate && moment(this.endDate).isValid()) {\n      this.endDate = moment(this.endDate);\n      this.navDate = this.endDate;\n      this.valueInputMinute.end = this.endDate.format('mm');\n      this.valueInputHour.end = this.endDate.format('hh');\n      this.includeEndDate = true;\n      const endDay = {\n        month: Number(this.endDate.format('M')),\n        year: this.endDate.year(),\n        day: Number(this.endDate.format('DD'))\n      };\n\n      this.applyRange();\n      const startDay = {\n        month: Number(this.startDate.format('M')),\n        year: this.startDate.year(),\n        day: Number(this.startDate.format('DD'))\n      };\n      this.dataMonths[startDay.year][startDay.month].forEach(d => d.isActive = (d.value === startDay.day));\n      this.dataMonths[endDay.year][endDay.month].forEach(d => {\n        if (!d.isActive) {\n          d.isActive = (d.value === endDay.day);\n        }\n      });\n    } else {\n      this.endDate = null;\n    }\n\n    this.currentMonth = this.navDate.month();\n    this.currentYear = this.navDate.year();\n    if (this.showInitialValue) {\n      this.concatValueInput();\n    }\n\n  }\n\n  /**\n   *\n   * controlValueAccessor\n   */\n  onInput(value) {\n    this.value = value;\n    this.onTouch();\n    this.onChange(this.value);\n  }\n\n  writeValue(value: any): void {\n    if (value) {\n      this.value = value || '';\n    } else {\n      this.value = '';\n    }\n  }\n\n  registerOnChange(fn: any): void {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    this.onTouch = fn;\n  }\n\n  setDisabledState(isDisabled: boolean): void {\n    this.isDisabled = isDisabled;\n  }\n\n  /**\n   *\n   * @param num\n   * @param mode\n   */\n  addOrSubHour = (num: number, mode: string) => {\n    if (num > 0) {\n      this.checkHourValidate((Number(this.valueInputHour[mode]) + 1), mode);\n    } else {\n      this.checkHourValidate((Number(this.valueInputHour[mode]) - 1), mode);\n    }\n  };\n\n  addOrSubMinute = (num: number, mode: string) => {\n    if (num > 0) {\n      this.checkMinuteValidate((Number(this.valueInputMinute[mode]) + 1), mode);\n    } else {\n      this.checkMinuteValidate((Number(this.valueInputMinute[mode]) - 1), mode);\n    }\n  };\n\n  checkHourValidate = ($event, mode) => {\n    const toHour = (mode === 'start') ? 'start' : 'end';\n    if (this.meridianTime) {\n      this.valueInputHour[toHour] = $event;\n      if ($event <= 12 && $event > 0) {\n        if (mode === 'start' && this.startDate && this.startDate.format('A') === 'PM') {\n          if ($event === 12) {\n            this.startDate.set({hour: ($event), minute: this.valueInputMinute[toHour], second: 0, millisecond: 0});\n          } else {\n            this.startDate.set({hour: ($event + 12), minute: this.valueInputMinute[toHour], second: 0, millisecond: 0});\n          }\n        }\n        if (mode === 'start' && this.startDate && this.startDate.format('A') === 'AM') {\n          this.startDate.set({hour: ($event), minute: this.valueInputMinute[toHour], second: 0, millisecond: 0});\n        }\n\n        if (mode === 'end' && this.endDate && this.endDate.format('A') === 'PM') {\n          if ($event === 12) {\n            this.endDate.set({hour: ($event), minute: this.valueInputMinute[toHour], second: 0, millisecond: 0});\n          } else {\n            this.endDate.set({hour: ($event + 12), minute: this.valueInputMinute[toHour], second: 0, millisecond: 0});\n          }\n        }\n        if (mode === 'end' && this.endDate && this.endDate.format('A') === 'AM') {\n          this.endDate.set({hour: ($event), minute: this.valueInputMinute[toHour], second: 0, millisecond: 0});\n        }\n        if (mode === 'start' && this.endDate && this.endDate.format('A') === 'PM') {\n          this.startDate.set({hour: this.valueInputHour[toHour] + 12, minute: this.valueInputMinute[toHour], second: 0, millisecond: 0});\n        }\n      }\n    } else {\n      if ($event >= 0 && $event <= 23) {\n        this.valueInputHour[toHour] = $event;\n        if (mode === 'end') {\n          this.endDate.set({hour: ($event), minute: this.valueInputMinute[toHour], second: 0, millisecond: 0});\n        }\n        if (mode === 'start') {\n          this.startDate.set({hour: this.valueInputHour[toHour], minute: this.valueInputMinute[toHour], second: 0, millisecond: 0});\n        }\n      }\n    }\n\n    this.reFormatInput();\n  };\n\n  checkMinuteValidate = ($event, mode: string) => {\n    const toHour = (mode === 'start') ? 'start' : 'end';\n    this.valueInputMinute[toHour] = $event;\n    if ($event < 0) {\n      this.valueInputMinute[toHour] = 59;\n    } else if ($event > 59) {\n      this.valueInputMinute[toHour] = 0;\n    }\n    if (mode === 'start') {\n      this.startDate.set({minute: this.valueInputMinute[toHour], second: 0, millisecond: 0});\n    }\n    if (mode === 'end') {\n      this.endDate.set({minute: this.valueInputMinute[toHour], second: 0, millisecond: 0});\n    }\n    this.reFormatInput();\n  };\n\n  changeMeridianTime = (newMeridian, mode) => {\n    const isStartOrEnd = (mode === 'start') ? 'startDate' : 'endDate';\n    if (newMeridian === 'AM' && this[isStartOrEnd].hours() > 12) {\n      this[isStartOrEnd].hours(this[isStartOrEnd].hours() - 12);\n    } else if (newMeridian === 'PM' && this[isStartOrEnd].hours() <= 12) {\n      this[isStartOrEnd].hours(this[isStartOrEnd].hours() + 12);\n    } else if (newMeridian === 'AM' && this.startDate.hours() <= 12) {\n      this[isStartOrEnd].hours(this[isStartOrEnd].hours() - 1);\n    }\n    if (mode === 'start') {\n      this.valueInputHour[mode] = this[isStartOrEnd].hours(this[isStartOrEnd].hours()).format('hh');\n    }\n    if (mode === 'end') {\n      this.valueInputHour[mode] = this[isStartOrEnd].hours(this[isStartOrEnd].hours()).format('hh');\n    }\n    this.reFormatInput();\n  };\n\n  setOptions() {\n    moment.locale(this.locale);\n    this.generateAllGrid();\n    this.formatInputTime = (this.meridianTime) ? `D MMM, YYYY hh:mm A` : `D MMM, YYYY HH:mm`;\n  }\n\n  /**\n   * Concat values date to string format for show in input\n   */\n  concatValueInput = () => {\n    let concatValue = [];\n    if (this.startDate && this.startDate.isValid()) {\n      concatValue = [\n        this.startDate.format(this.formatInputDate),\n        (this.endDate && this.endDate.isValid()) ? '  -  ' : '',\n        (this.endDate && this.endDate.isValid()) ? this.endDate.format(this.formatInputDate) : ''\n      ];\n    }\n\n    this.value = concatValue.join('');\n    this.isInvalid = !(this.value.length);\n    this.selected = {\n      startDate: (this.startDate && this.startDate.isValid()) ? this.startDate.toDate() : null,\n      endDate: (this.endDate && this.endDate.isValid()) ? this.endDate.toDate() : null\n    };\n  };\n\n  setAccess() {\n    this.canAccessPrevious = this.canChangeNavMonth(-1);\n    this.canAccessNext = this.canChangeNavMonth(1);\n  }\n\n  changeNavMonth(num: number, mode = 'next') {\n    if (this.canChangeNavMonth(num)) {\n      this.navDate.add(num, 'month');\n      this.currentMonth = this.navDate.month() + 1;\n      this.currentYear = this.navDate.year();\n      if (this.dataMonths.hasOwnProperty(this.currentYear) && this.dataMonths[this.currentYear].hasOwnProperty(this.currentMonth)) {\n        this.dataMonths[this.currentYear][this.currentMonth] = [];\n      }\n      this.makeGridCustom(this.currentYear, this.currentMonth);\n    }\n  }\n\n  generateAllGrid = () => {\n    const dateObjectCurrent = moment().startOf('year').clone();\n    [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12].forEach(a => {\n      this.makeGridCustom(dateObjectCurrent.year(), a);\n    });\n\n  };\n\n  canChangeNavMonth(num: number) {\n    const clonedDate = moment(this.navDate);\n    return this.canChangeNavMonthLogic(num, clonedDate);\n  }\n\n  makeHeader() {\n    const weekDaysArr: Array<number> = [0, 1, 2, 3, 4, 5, 6];\n    weekDaysArr.forEach(day => this.weekDaysHeaderArr.push(moment().weekday(day).format('ddd')));\n  }\n\n  getDimensions(date: any) {\n    const firstDayDate = moment(date).startOf('month');\n    this.initialEmptyCells = firstDayDate.weekday();\n    const lastDayDate = moment(date).endOf('month');\n    this.lastEmptyCells = 6 - lastDayDate.weekday();\n    this.arrayLength = this.initialEmptyCells + this.lastEmptyCells + date.daysInMonth();\n  }\n\n  makeGridCustom = (year = null, month = null) => {\n    const dateOfTurn = moment(`${year}-${month}-01`, 'YYYY-M-DD');\n    /**\n     * Is OK\n     */\n    if (!this.dataMonths.hasOwnProperty(year)) {\n      this.dataMonths[year] = {};\n    }\n    /**\n     * Is OK\n     */\n    if (!this.dataMonths[year].hasOwnProperty(month)) {\n      this.dataMonths[year][month] = [];\n    }\n    /**\n     * Fix\n     */\n\n    const firstDayDate = moment(dateOfTurn).startOf('month');\n    const lastDayDate = moment(dateOfTurn).endOf('month');\n    this.dataMonths[year][`initialEmptyCells${month}`] = firstDayDate.weekday();\n    this.dataMonths[year][`lastEmptyCells${month}`] = 6 - lastDayDate.weekday();\n\n    const initEmptyCell = this.dataMonths[year][`initialEmptyCells${month}`];\n    const lastEmptyCell = this.dataMonths[year][`lastEmptyCells${month}`];\n\n    this.dataMonths[year][`arrayLength${month}`] = initEmptyCell + lastEmptyCell + dateOfTurn.daysInMonth();\n\n    const arrayLengths = this.dataMonths[year][`arrayLength${month}`];\n\n    this.getDimensions(dateOfTurn);\n    for (let i = 0; i < arrayLengths; i++) {\n      const obj: any = {};\n      if (i < initEmptyCell || i > initEmptyCell + dateOfTurn.daysInMonth() - 1) { // 0 < 0 NO || 0 > (0-1) SI\n        obj.value = 0;\n        obj.available = false;\n        obj.isToday = false;\n      } else {\n        obj.value = i - initEmptyCell + 1;\n        obj.available = this.isAvailable(i - initEmptyCell + 1);\n        obj.isToday = this.isToday(i - initEmptyCell + 1, month, year);\n        obj.month = month;\n        obj.date = dateOfTurn;\n        obj.year = year;\n        obj.isActive = false;\n        if (this.dateFromDayAndMonthAndYear(obj.value, month, year).isSame(this.startDate)) {\n          this.startDay = obj;\n        }\n        if (this.dateFromDayAndMonthAndYear(obj.value, month, year).isSame(this.endDate)) {\n          this.endDay = obj;\n        }\n        if (obj.isToday && !this.startDay && !this.endDay) {\n          this.startDay = obj;\n          this.endDay = obj;\n          obj.isActive = true;\n        }\n      }\n      obj.inRange = false;\n      this.dataMonths[year][month].push(obj);\n    }\n  };\n\n  isAvailable(num: number): boolean {\n    const dateToCheck = this.dateFromNum(num, this.navDate);\n    return this.isAvailableLogic(dateToCheck);\n  }\n\n  isToday(num: number, month: number, year: number): boolean {\n    const dateToCheck = moment(this.dateFromDayAndMonthAndYear(num, month, year));\n    return dateToCheck.isSame(moment().set({hour: 0, minute: 0, second: 0, millisecond: 0}));\n  }\n\n  dateFromNum(num: number, referenceDate: any): any {\n    const returnDate = moment(referenceDate);\n    return returnDate.date(num);\n  }\n\n  reFormatInput = () => {\n    this.formatInputDate = (this.includeTime) ? this.formatInputTime : this.formatInputDate;\n    this.concatValueInput();\n  };\n\n  selectDay(day: any) {\n    if (day.available) {\n      this.selectedDate = this.dateFromDayAndMonthAndYear(day.value, day.month, day.year);\n      if (this.includeEndDate) {\n        const currDate = this.dateFromDayAndMonthAndYear(day.value, day.month, day.year);\n        switch (this.mode) {\n          case 'end':\n            if (currDate.isSame(moment(this.startDate).startOf('day'))) {\n              this.mode = 'start';\n            } else if (currDate.isSameOrBefore(this.startDate)) {\n              this.endDay = this.startDay;\n              this.startDay = day;\n              this.mode = 'start';\n            } else {\n              this.endDay = day;\n            }\n            break;\n          case 'start':\n            if (currDate.isSame(moment(this.endDate).startOf('day'))) {\n              this.mode = 'end';\n            } else if (currDate.isSameOrAfter(this.endDate)) {\n              this.startDay = this.endDay;\n              this.endDay = day;\n              this.mode = 'end';\n            } else {\n              this.startDay = day;\n            }\n            break;\n        }\n\n        this.startDate = this.generateDate(this.startDay, this.startDate);\n        this.endDate = this.generateDate(this.endDay, this.endDate);\n        this.applyRange();\n        this.startDay.isActive = true;\n        this.endDay.isActive = true;\n        this.selected = {\n          startDate: this.startDate.toDate(),\n          endDate: this.endDate.toDate()\n        };\n      } else {\n        this.resetActivity();\n\n        this.startDate = this.selectedDate;\n        this.startDay = day;\n        this.startDay.isActive = true;\n        this.selected = {\n          startDate: this.startDate.toDate(),\n          endDate: null\n        };\n        this.emitSelected.emit(this.selected);\n      }\n      if (this.startDate && this.endDate) {\n        this.emitSelected.emit(this.selected);\n      }\n      this.reFormatInput();\n    }\n  }\n\n  generateDate(day: any, date: any) {\n    let generatedDate = this.dateFromDayAndMonthAndYear(day.value, day.month, day.year);\n    if (date) {\n      generatedDate = generatedDate.set({hour: date.hour(), minute: date.minute()});\n    }\n    return generatedDate;\n  }\n\n  resetRange() {\n    Object.keys(this.dataMonths).forEach(year => {\n      Object.keys(this.dataMonths[year]).forEach(month => {\n        if (!isNaN(Number(month))) {\n          this.dataMonths[year][month].map(day => {\n            day.inRange = false;\n            day.isActive = false;\n          });\n        }\n\n      });\n    });\n  }\n\n  resetActivity() {\n    Object.keys(this.dataMonths).forEach(year => {\n      Object.keys(this.dataMonths[year]).forEach(month => {\n        if (!isNaN(Number(month))) {\n          this.dataMonths[year][month].map(day => {\n            day.isActive = false;\n          });\n        }\n      });\n    });\n  }\n\n  dateFromDayAndMonthAndYear(day, month, year) {\n    let timeObject = {hour: 0, minute: 0, second: 0, millisecond: 0};\n    if (this.includeTime) {\n      timeObject = {hour: this.startDate.hour(), minute: this.startDate.minute(), second: 0, millisecond: 0};\n      this.startDate.format('h:mm A');\n    }\n    return moment(`${year}-${month}-${day}`, 'YYYY-M-DD').set(timeObject);\n  }\n\n  applyRange() {\n    this.getDimensions(this.startDate);\n    const start = this.initialEmptyCells + this.startDay.value - 1;\n    const startMonthLength = this.arrayLength;\n    this.getDimensions(this.endDate);\n    const endMonthLength = this.arrayLength;\n    const end = this.initialEmptyCells + this.endDay.value - 1;\n    this.resetRange();\n    if (this.startDay.month !== this.endDay.month || this.startDay.year !== this.endDay.year) {\n      Object.keys(this.dataMonths).forEach(year => {\n        const calendar = this.dataMonths[year];\n        Object.keys(calendar).forEach(month => {\n          if (!isNaN(Number(month))) {\n            const days = this.dataMonths[year][month];\n            if (Number(month) === Number(this.startDay.month) && Number(year) === Number(this.startDay.year)) {\n              for (let i = 0; i < start; i++) {\n                days[i].inRange = false;\n              }\n              for (let i = start; i < startMonthLength; i++) {\n                days[i].inRange = true;\n              }\n            } else if (Number(month) === Number(this.endDay.month) && Number(year) === Number(this.endDay.year)) {\n              for (let i = 0; i <= end; i++) {\n                days[i].inRange = true;\n              }\n              for (let i = end + 1; i < endMonthLength; i++) {\n                days[i].inRange = false;\n              }\n            } else if ((month > this.startDay.month || year > this.startDay.year)\n              && (month < this.endDay.month || year < this.endDay.year)) {\n              days.forEach(day => day.inRange = true);\n            }\n          }\n        });\n      });\n    } else {\n      const month = this.startDay.month;\n      const year = this.startDay.year;\n      for (let i = 0; i < start; i++) {\n        this.dataMonths[year][month][i].inRange = false;\n      }\n      for (let i = start; i <= end; i++) {\n        this.dataMonths[year][month][i].inRange = true;\n      }\n      for (let i = end + 1; i < this.arrayLength; i++) {\n        this.dataMonths[year][month][i].inRange = false;\n      }\n    }\n  }\n\n  isAvailableLogic(dateToCheck: any) {\n    if (this.minDate || this.maxDate) {\n      return !(dateToCheck.isBefore(this.minDate) || dateToCheck.isAfter(this.maxDate));\n    } else {\n      return !dateToCheck.isBefore(moment(), 'day');\n    }\n  }\n\n  canChangeNavMonthLogic(num, currentDate) {\n    currentDate.add(num, 'month');\n    const minDate = this.minDate ? this.minDate : moment().add(-1, 'month');\n    const maxDate = this.maxDate ? this.maxDate : moment().add(1, 'year');\n    return currentDate.isBetween(minDate, maxDate);\n  }\n\n  toggleCalendar(): any {\n    this.isOpen = !this.isOpen;\n    this.reFormatInput();\n  }\n\n  openCalendar(): any {\n    this.isOpen = true;\n    this.onTouch();\n  }\n\n  closeCalendar(): any {\n    this.isOpen = false;\n    this.reFormatInput();\n    this.emitSelected.emit(this.selected);\n\n  }\n\n  changeMode(mode: string) {\n    this.mode = mode;\n    this.onTouch();\n  }\n\n  clear() {\n    this.resetRange();\n    this.startDate = moment();\n    this.endDate = null;\n    this.navDate = this.todayDate;\n    this.currentMonth = this.navDate.month();\n    this.currentYear = this.navDate.year();\n    this.includeEndDate = false;\n    this.includeTime = false;\n    this.startTime = null;\n    this.endTime = null;\n    this.mode = 'start';\n    this.makeGridCustom(this.currentYear, this.currentMonth);\n    this.reFormatInput();\n  }\n\n  setTime(moment, hour: number = 0, minute: number = 0) {\n    return moment.set({hour, minute, second: 0, millisecond: 0});\n  }\n\n  handleModeChange() {\n    this.resetRange();\n    this.mode = 'end';\n    if (this.startDay) {\n      this.startDay.isActive = true;\n    }\n    if (!this.includeEndDate) {\n      this.endDate = null;\n      this.mode = 'start';\n      this.startDay.isActive = false;\n      this.endDay.isActive = false;\n    } else {\n      const tmpStartDate = this.startDate.clone();\n      // const nextDay = tmpStartDate.add(2, 'days').format(`YYYY-${tmpStartDate.format('M') - 1}-D`);\n      // this.simulateClick(nextDay, 'calendar-day-not-range');\n    }\n\n  }\n\n  setStartTime(time) {\n    this.startTime = time;\n  }\n\n  setEndTime(time) {\n    this.endTime = time;\n  }\n\n  handleTimeChange(time: any, moment: any, mode: string) {\n    this.reFormatInput();\n    if (!time) {\n      return;\n    }\n    time = time.replace(/[^a-zA-Z0-9]/g, '');\n    moment.set({hour: 0, minute: 0, second: 0, millisecond: 0});\n    let lastTwo = time.substr(time.length - 2).toUpperCase();\n    let last = time.substr(time.length - 1).toUpperCase();\n    const hasLastTwo = ['AM', 'PM'].includes(lastTwo);\n    const hasLast = ['A', 'P'].includes(last);\n    let isAm = true;\n    let isPm = false;\n    if (hasLast || hasLastTwo) {\n      isAm = last === 'A' || lastTwo === 'AM';\n      isPm = last === 'P' || lastTwo === 'PM';\n    }\n    time = time.replace(/[^0-9]/g, '');\n    lastTwo = time.substr(time.length - 2);\n    last = time.substr(time.length - 1);\n    time = time.substr(0, 4);\n    this.isInvalid = false;\n    switch (time.length) {\n      case 1:\n        moment\n          = isAm ? this.setTime(moment, Number(time)) :\n          this.setTime(moment, Number(time) + 12);\n        break;\n      case 2:\n        if (last >= 6) {\n          this.isInvalid = true;\n          break;\n        }\n        if (time === 12) {\n          moment\n            = isAm ? this.setTime(moment, 0) :\n            this.setTime(moment, 12);\n        } else if (time < 12) {\n          moment\n            = isAm ? this.setTime(moment, Number(time)) :\n            this.setTime(moment, Number(time) + 12);\n        } else {\n          moment\n            = isAm ? this.setTime(moment, Number(time[0]), Number(last)) :\n            this.setTime(moment, Number(time[0]) + 12, Number(last));\n        }\n        break;\n      case 3:\n        if (lastTwo >= 60) {\n          this.isInvalid = true;\n          break;\n        } else {\n          moment\n            = isAm ? this.setTime(moment, Number(time[0]), Number(lastTwo)) :\n            this.setTime(moment, Number(time[0]) + 12, Number(lastTwo));\n        }\n        break;\n      case 4:\n        if (lastTwo >= 60) {\n          this.isInvalid = true;\n          break;\n        }\n        moment = this.setTime(moment, Number(time.substr(0, 2)), Number(lastTwo));\n        break;\n      default:\n        this.isInvalid = true;\n        break;\n    }\n    this.emitSelected.emit(this.selected);\n    if (mode === 'start') {\n      this.startDate = moment;\n      this.startTimePicker.nativeElement.blur();\n    } else {\n      this.endDate = moment;\n      this.endTimePicker.nativeElement.blur();\n    }\n  }\n\n}\n","import {Directive, ElementRef, EventEmitter, HostListener, Output} from '@angular/core';\n\n@Directive({\n  selector: '[clickOutside]'\n})\nexport class OutSideDirective {\n\n  @Output() clickOutside = new EventEmitter<void>();\n\n  constructor(private elementRef: ElementRef) {\n  }\n\n  @HostListener('document:click', ['$event.target'])\n  public onClick(target) {\n    const classElement = target.classList || [];\n    if (!Array.from(classElement).includes('omit-trigger-outside')) {\n      const clickedInside = this.elementRef.nativeElement.contains(target);\n      if (!clickedInside) {\n        this.clickOutside.emit();\n      }\n    }\n\n  }\n}\n","import { Directive, ElementRef, HostListener, Input } from '@angular/core';\n\n@Directive({\n  selector: '[libCheckInput]'\n})\nexport class CheckInputDirective {\n  private tmpValue: any;\n  inputElement: ElementRef;\n\n  constructor(el: ElementRef) {\n    this.inputElement = el;\n  }\n\n  @HostListener('keypress', ['$event']) onKeyPress(event) {\n    this.tmpValue = (this.inputElement.nativeElement.value.length > 2) ? 1 : this.inputElement.nativeElement.value;\n    this.integerOnly(event);\n  }\n\n  @HostListener('keyup', ['$event']) onKeyUp(event) {\n    this.checkLength(event);\n  }\n\n  checkLength(event) {\n    const value = this.inputElement.nativeElement.value;\n    if (!isNaN(value)) {\n      if (value.toString().length > 2) {\n        this.inputElement.nativeElement.value = this.tmpValue\n        event.preventDefault();\n      }\n    } else {\n      event.preventDefault();\n    }\n  }\n\n  integerOnly(event) {\n\n\n    const e = event as KeyboardEvent;\n    if (e.key === 'Tab' || e.key === 'TAB') {\n      return;\n    }\n    if ([46, 8, 9, 27, 13, 110].indexOf(e.keyCode) !== -1 ||\n      // Allow: Ctrl+A\n      (e.keyCode === 65 && e.ctrlKey === true) ||\n      // Allow: Ctrl+C\n      (e.keyCode === 67 && e.ctrlKey === true) ||\n      // Allow: Ctrl+V\n      (e.keyCode === 86 && e.ctrlKey === true) ||\n      // Allow: Ctrl+X\n      (e.keyCode === 88 && e.ctrlKey === true)) {\n      // let it happen, don't do anything\n      return;\n    }\n    if (['1', '2', '3', '4', '5', '6', '7', '8', '9', '0'].indexOf(e.key) === -1) {\n      e.preventDefault();\n    }\n  }\n\n\n}\n","import { NgModule } from '@angular/core';\nimport { NgxFunnyDatepickerComponent } from './ngx-funny-datepicker.component';\nimport { DatepickerComponent } from './datepicker/datepicker.component';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { OutSideDirective } from './out-side.directive';\nimport { CheckInputDirective } from './check-input.directive';\n\n\n\n@NgModule({\n  declarations: [NgxFunnyDatepickerComponent, DatepickerComponent, OutSideDirective, CheckInputDirective],\n  imports: [\n    CommonModule,\n    FormsModule\n  ],\n  exports: [DatepickerComponent]\n})\nexport class NgxFunnyDatepickerModule { }\n"]}